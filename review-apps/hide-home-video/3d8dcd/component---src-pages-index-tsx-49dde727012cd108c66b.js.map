{"version":3,"sources":["webpack:///./src/assets/home/introduction/open-source.svg","webpack:///./src/assets/home/introduction/identifier-mobile.svg","webpack:///./src/components/common/community.tsx","webpack:///./src/assets/home/introduction/better-ux.svg","webpack:///./src/components/common/wave-vector.tsx","webpack:///./src/components/common/wave.tsx","webpack:///./src/assets/home/integrate/discord.svg","webpack:///./src/assets/WaveLTR.svg","webpack:///./src/assets/home/introduction/identifier.svg","webpack:///./src/assets/home/introduction/tech-stack.svg","webpack:///./src/components/pages/home/developerDetails.ts","webpack:///./src/components/pages/home/integrate.tsx","webpack:///./src/components/pages/home/introduction.tsx","webpack:///./src/components/pages/home/questions.tsx","webpack:///./src/components/pages/home/support.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/common/learn.tsx","webpack:///./src/assets/WaveRTL.svg","webpack:///./src/assets/common/selectArrow.svg","webpack:///./src/components/common/input-field.tsx"],"names":["React","OpenSource","props","createElement","defaultProps","module","exports","default","IdentifierMobile","CommunityFields","Community","direction","title","description","orangeButton","enabledFields","className","useState","validForm","setValidForm","role","setRole","firstName","setFirstName","lastName","setLastName","email","setEmail","submitted","setSubmitted","enabledFieldsFinal","useMemo","Array","isArray","length","allFields","Object","values","splice","map","v","toLowerCase","emailRegex","isValidEmail","val","test","useEffect","valid","includes","background","wave","spacing","waveClassNames","onSubmit","event","preventDefault","formData","undefined","window","heap","track","gtag","send_to","encodedFormData","encodeFormData","fetch","mode","method","body","headers","catch","err","Sentry","captureException","defaultValue","id","name","onChange","target","value","label","r","key","hidden","htmlFor","classNames","theme","type","autoComplete","required","requiredText","e","currentTarget","validate","invalidText","disabled","variant","size","BetterUx","WaveVector","classes","Wave","waveVectorClasses","waveVectorClassNames","waveClasses","childrenClass","contentClasses","container","style","children","Discord","WaveLTR","Identifier","TechStack","logo","userImage","userName","userPost","url","subPanels","link","discordBackground","backgroundImage","withPrefix","backgroundRepeat","backgroundSize","discordBackgroundSmall","DeveloperCard","href","src","Integrate","activePanel","setActivePanel","activeSubPanel","setActiveSubpanel","activeCardIdx","setActiveCardIdx","subPanelLink","subIdx","findIndex","panel","no-gutter","getDocsLocation","panelIndex","onClick","subPanel","rel","developerDetails","detail","idx","height","to","Introduction","bgImgStyle","backgroundPosition","sectionCopy","icon","BetterUX","copy","Questions","Institutions","Index","path","Learn","learnables","bgStyle","learnable","WaveRTL","SelectArrow","InputField","inputProps","inputRef","useRef","isRaised","setIsRaised","error","setError","shouldRaise","current","document","activeElement","hasErrors","onFocus","onBlur","ref"],"mappings":"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","file":"component---src-pages-index-tsx-49dde727012cd108c66b.js","sourcesContent":["var React = require('react');\n\nfunction OpenSource (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M54.8343 0H35.6457L26 16.6504L35.6457 33.4035H54.8343L64.48 16.6504L54.8343 0Z\",\"fill\":\"#0087FF\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M25.5 56C38.4787 56 49 45.4787 49 32.5C49 19.5213 38.4787 9 25.5 9C12.5213 9 2 19.5213 2 32.5C2 45.4787 12.5213 56 25.5 56Z\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M25.4992 39.5501C29.3928 39.5501 32.5492 36.3937 32.5492 32.5001C32.5492 28.6065 29.3928 25.4501 25.4992 25.4501C21.6056 25.4501 18.4492 28.6065 18.4492 32.5001C18.4492 36.3937 21.6056 39.5501 25.4992 39.5501Z\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":2})]);\n}\n\nOpenSource.defaultProps = {\"width\":\"65\",\"height\":\"58\",\"viewBox\":\"0 0 65 58\",\"fill\":\"none\"};\n\nmodule.exports = OpenSource;\n\nOpenSource.default = OpenSource;\n","var React = require('react');\n\nfunction IdentifierMobile (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M198.605 652.903L223.477 627.412C228.699 622.044 234.718 617.515 241.323 613.987C239.198 597.615 231.657 582.425 219.902 570.837L150.768 503.378C150.067 507.67 149.744 512.015 149.803 516.363C149.877 528.076 152.738 539.602 158.15 549.988C161.703 556.735 166.298 562.88 171.764 568.195L197.393 593.208C205.387 601.007 209.994 611.639 210.221 622.807C210.448 633.975 206.276 644.785 198.605 652.903Z\",\"fill\":\"url(#home-id-mobile-paint0)\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M168 550C168 231.722 99.3218 114.588 74 77\",\"stroke\":\"url(#home-id-mobile-paint1)\",\"strokeWidth\":\"3.24255\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M47.0757 640.953C51.3664 641.651 55.7096 641.974 60.0562 641.919C71.9041 641.842 83.5587 638.909 94.0325 633.368C100.638 629.844 106.658 625.318 111.878 619.95L137.229 593.957C141.127 589.952 145.776 586.755 150.91 584.549C156.044 582.343 161.562 581.17 167.149 581.098C172.736 581.027 178.283 582.057 183.472 584.131C188.661 586.205 193.39 589.281 197.39 593.184L171.761 568.172C166.295 562.856 161.7 556.712 158.147 549.965C141.562 552.103 126.189 559.798 114.534 571.795L47.0757 640.953Z\",\"fill\":\"url(#home-id-mobile-paint2)\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M168 550C168 311.055 223.367 209.219 236 181\",\"stroke\":\"url(#home-id-mobile-paint3)\",\"strokeWidth\":\"3.24255\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M80.5 322.5C132 361 168 497.5 168 559.5\",\"stroke\":\"url(#home-id-mobile-paint4)\",\"strokeWidth\":\"3.24255\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M168 559L168 831\",\"stroke\":\"url(#home-id-mobile-paint5)\",\"strokeWidth\":\"3.24255\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M168 561.5C168 477.388 221.335 435.933 241 426\",\"stroke\":\"url(#home-id-mobile-paint6)\",\"strokeWidth\":\"3.24255\",\"key\":6}),React.createElement(\"rect\",{\"x\":\"43\",\"y\":\"826.525\",\"width\":\"250\",\"height\":\"57.8995\",\"rx\":\"6.59486\",\"fill\":\"white\",\"key\":7}),React.createElement(\"path\",{\"d\":\"M56.8667 864.25C58.8271 864.25 60.0966 863.395 60.7443 862.161L60.8479 862.161L60.8479 864L64.3369 864L64.3369 855.053C64.3369 851.892 61.6597 850.562 58.7062 850.562C55.5281 850.562 53.4382 852.082 52.9287 854.5L56.3313 854.777C56.5817 853.896 57.3676 853.248 58.6889 853.248C59.9411 853.248 60.6579 853.879 60.6579 854.967L60.6579 855.019C60.6579 855.873 59.7511 855.986 57.4453 856.21C54.82 856.452 52.4623 857.333 52.4623 860.295C52.4623 862.92 54.3363 864.25 56.8667 864.25ZM57.9203 861.711C56.789 861.711 55.9772 861.185 55.9772 860.174C55.9772 859.138 56.8322 858.628 58.1276 858.447C58.9307 858.335 60.2434 858.145 60.6838 857.851L60.6838 859.259C60.6838 860.649 59.5352 861.711 57.9203 861.711ZM70.8701 846.313L67.1911 846.313L67.1911 864L70.8701 864L70.8701 846.313ZM73.8171 864L77.4961 864L77.4961 850.735L73.8171 850.735L73.8171 864ZM75.6652 849.025C76.762 849.025 77.6602 848.187 77.6602 847.16C77.6602 846.141 76.762 845.303 75.6652 845.303C74.5771 845.303 73.6789 846.141 73.6789 847.16C73.6789 848.187 74.5771 849.025 75.6652 849.025ZM86.4366 864.259C89.9687 864.259 92.1882 862.186 92.3609 859.138L88.8892 859.138C88.6733 860.554 87.7406 861.349 86.4797 861.349C84.7612 861.349 83.6471 859.907 83.6471 857.368C83.6471 854.863 84.7698 853.429 86.4797 853.429C87.827 853.429 88.6906 854.319 88.8892 855.64L92.3609 855.64C92.2054 852.575 89.8823 850.562 86.4193 850.562C82.3949 850.562 79.9077 853.352 79.9077 857.419C79.9077 861.452 82.3517 864.259 86.4366 864.259ZM100.762 864.259C104.043 864.259 106.254 862.661 106.772 860.2L103.37 859.976C102.998 860.986 102.048 861.513 100.822 861.513C98.9826 861.513 97.8167 860.295 97.8167 858.317L97.8167 858.309L106.85 858.309L106.85 857.298C106.85 852.79 104.121 850.562 100.615 850.562C96.7113 850.562 94.1809 853.334 94.1809 857.428C94.1809 861.634 96.6768 864.259 100.762 864.259ZM97.8167 856.029C97.8945 854.518 99.043 853.309 100.675 853.309C102.273 853.309 103.378 854.449 103.387 856.029L97.8167 856.029ZM114.769 866.211L116.807 866.211L116.825 864.216C120.564 863.931 122.732 861.945 122.74 858.948C122.732 856.003 120.512 854.44 117.438 853.749L116.928 853.628L116.963 849.31C118.111 849.578 118.811 850.312 118.915 851.4L122.499 851.4C122.455 848.541 120.322 846.495 116.997 846.132L117.015 844.103L114.977 844.103L114.959 846.115C111.583 846.443 109.199 848.481 109.216 851.426C109.208 854.034 111.047 855.528 114.035 856.245L114.864 856.452L114.821 861.021C113.413 860.753 112.463 859.889 112.368 858.447L108.75 858.447C108.836 861.936 111.125 863.888 114.787 864.207L114.769 866.211ZM116.859 861.021L116.894 856.988C118.232 857.411 118.958 857.955 118.966 858.939C118.958 859.984 118.163 860.761 116.859 861.021ZM114.89 853.101C113.811 852.73 113.033 852.169 113.051 851.175C113.051 850.251 113.707 849.535 114.925 849.284L114.89 853.101ZM131.232 864.259C134.513 864.259 136.724 862.661 137.242 860.2L133.84 859.976C133.469 860.986 132.519 861.513 131.292 861.513C129.453 861.513 128.287 860.295 128.287 858.317L128.287 858.309L137.32 858.309L137.32 857.298C137.32 852.79 134.591 850.562 131.085 850.562C127.181 850.562 124.651 853.334 124.651 857.428C124.651 861.634 127.147 864.259 131.232 864.259ZM128.287 856.029C128.365 854.518 129.513 853.309 131.145 853.309C132.743 853.309 133.849 854.449 133.857 856.029L128.287 856.029ZM142.582 850.735L138.782 850.735L142.582 857.368L138.644 864L142.444 864L145.017 859.414L147.634 864L151.391 864L147.444 857.368L151.287 850.735L147.513 850.735L145.017 855.373L142.582 850.735ZM157.183 864.25C159.144 864.25 160.413 863.395 161.061 862.161L161.164 862.161L161.164 864L164.653 864L164.653 855.053C164.653 851.892 161.976 850.562 159.023 850.562C155.845 850.562 153.755 852.082 153.245 854.5L156.648 854.777C156.898 853.896 157.684 853.248 159.005 853.248C160.258 853.248 160.974 853.879 160.974 854.967L160.974 855.019C160.974 855.873 160.068 855.986 157.762 856.21C155.136 856.452 152.779 857.333 152.779 860.295C152.779 862.921 154.653 864.25 157.183 864.25ZM158.237 861.711C157.105 861.711 156.294 861.185 156.294 860.174C156.294 859.138 157.149 858.628 158.444 858.447C159.247 858.335 160.56 858.145 161 857.851L161 859.259C161 860.649 159.852 861.711 158.237 861.711ZM167.508 864L171.187 864L171.187 856.038C171.187 854.569 172.119 853.594 173.346 853.594C174.555 853.594 175.366 854.423 175.366 855.727L175.366 864L178.933 864L178.933 855.899C178.933 854.526 179.719 853.594 181.058 853.594C182.232 853.594 183.113 854.328 183.113 855.804L183.113 864L186.783 864L186.783 855.079C186.783 852.203 185.073 850.562 182.603 850.562C180.66 850.562 179.149 851.555 178.605 853.075L178.467 853.075C178.044 851.538 176.688 850.562 174.865 850.562C173.078 850.562 171.722 851.512 171.169 853.075L171.014 853.075L171.014 850.735L167.508 850.735L167.508 864ZM189.689 868.974L193.368 868.974L193.368 861.876L193.481 861.876C193.99 862.981 195.104 864.216 197.246 864.216C200.268 864.216 202.626 861.824 202.626 857.385C202.626 852.825 200.165 850.562 197.254 850.562C195.035 850.562 193.973 851.884 193.481 852.963L193.316 852.963L193.316 850.735L189.689 850.735L189.689 868.974ZM193.291 857.368C193.291 855.001 194.292 853.49 196.08 853.49C197.902 853.49 198.869 855.07 198.869 857.368C198.869 859.682 197.885 861.288 196.08 861.288C194.31 861.288 193.291 859.734 193.291 857.368ZM208.758 846.313L205.079 846.313L205.079 864L208.758 864L208.758 846.313ZM217.75 864.259C221.032 864.259 223.242 862.661 223.761 860.2L220.358 859.976C219.987 860.986 219.037 861.513 217.81 861.513C215.971 861.513 214.805 860.295 214.805 858.318L214.805 858.309L223.838 858.309L223.838 857.298C223.838 852.79 221.109 850.562 217.603 850.562C213.7 850.562 211.169 853.334 211.169 857.428C211.169 861.634 213.665 864.259 217.75 864.259ZM214.805 856.029C214.883 854.518 216.031 853.309 217.664 853.309C219.261 853.309 220.367 854.449 220.375 856.029L214.805 856.029ZM228.39 864.225C229.495 864.225 230.454 863.301 230.462 862.152C230.454 861.021 229.495 860.097 228.39 860.097C227.25 860.097 226.308 861.021 226.317 862.152C226.308 863.301 227.25 864.225 228.39 864.225ZM239.476 864.259C243.008 864.259 245.228 862.186 245.4 859.138L241.929 859.138C241.713 860.554 240.78 861.349 239.519 861.349C237.801 861.349 236.687 859.907 236.687 857.368C236.687 854.863 237.809 853.429 239.519 853.429C240.867 853.429 241.73 854.319 241.929 855.64L245.4 855.64C245.245 852.575 242.922 850.562 239.459 850.562C235.434 850.562 232.947 853.352 232.947 857.419C232.947 861.452 235.391 864.259 239.476 864.259ZM253.749 864.259C257.774 864.259 260.278 861.504 260.278 857.419C260.278 853.309 257.774 850.562 253.749 850.562C249.725 850.562 247.221 853.309 247.221 857.419C247.221 861.504 249.725 864.259 253.749 864.259ZM253.767 861.409C251.91 861.409 250.96 859.708 250.96 857.393C250.96 855.079 251.91 853.369 253.767 853.369C255.589 853.369 256.539 855.079 256.539 857.393C256.539 859.708 255.589 861.409 253.767 861.409ZM262.67 864L266.349 864L266.349 856.038C266.349 854.569 267.282 853.594 268.508 853.594C269.717 853.594 270.529 854.423 270.529 855.727L270.529 864L274.096 864L274.096 855.899C274.096 854.526 274.882 853.594 276.22 853.594C277.395 853.594 278.276 854.328 278.276 855.804L278.276 864L281.946 864L281.946 855.079C281.946 852.203 280.236 850.562 277.766 850.562C275.823 850.562 274.312 851.555 273.768 853.075L273.63 853.075C273.206 851.538 271.851 850.562 270.028 850.562C268.241 850.562 266.885 851.512 266.332 853.075L266.177 853.075L266.177 850.735L262.67 850.735L262.67 864Z\",\"fill\":\"url(#home-id-mobile-paint7)\",\"key\":8}),React.createElement(\"path\",{\"d\":\"M177.531 697.328C194.004 695.139 209.26 687.465 220.843 675.545L288.278 606.402C283.985 605.698 279.639 605.372 275.29 605.429C263.442 605.5 251.787 608.431 241.313 613.972C234.709 617.501 228.689 622.029 223.468 627.397L198.596 652.889C198.449 653.051 198.287 653.213 198.125 653.383C190.307 661.402 179.644 666.014 168.449 666.217C157.254 666.421 146.431 662.201 138.327 654.472L164.303 679.824C169.573 684.955 174.033 690.857 177.531 697.328Z\",\"fill\":\"url(#home-id-mobile-paint8)\",\"key\":9}),React.createElement(\"path\",{\"d\":\"M116.174 677.182L185.3 744.641C187.937 728.435 185.209 711.81 177.532 697.297C174.035 690.832 169.578 684.935 164.312 679.809L138.336 654.456C134.259 650.575 130.993 645.923 128.727 640.769C126.461 635.616 125.24 630.064 125.135 624.435C125.031 618.806 126.044 613.212 128.116 607.978C130.189 602.743 133.279 597.972 137.208 593.942L111.881 619.92C106.66 625.287 100.641 629.814 94.0352 633.337C96.2081 650.048 104.018 665.516 116.174 677.182Z\",\"fill\":\"url(#home-id-mobile-paint9)\",\"key\":10}),React.createElement(\"rect\",{\"y\":\"222\",\"width\":\"177.539\",\"height\":\"103.778\",\"rx\":\"5.66726\",\"fill\":\"#8602CA\",\"key\":11}),React.createElement(\"rect\",{\"x\":\"131.161\",\"y\":\"231.881\",\"width\":\"32.6093\",\"height\":\"10.5896\",\"rx\":\"2.12522\",\"fill\":\"#DC9AFE\",\"key\":12}),React.createElement(\"rect\",{\"x\":\"13.4598\",\"y\":\"255.884\",\"width\":\"32.6093\",\"height\":\"21.1792\",\"rx\":\"2.12522\",\"fill\":\"#DC9AFE\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M15.5971 313.067L16.2089 311.187L19.1834 311.187L19.7952 313.067L21.6628 313.067L18.8211 304.823L16.5752 304.823L13.7295 313.067L15.5971 313.067ZM16.6516 309.826L17.6659 306.707L17.7303 306.707L18.7447 309.826L16.6516 309.826ZM24.3375 304.823L22.6228 304.823L22.6228 313.067L24.3375 313.067L24.3375 304.823ZM25.711 313.067L27.4257 313.067L27.4257 306.884L25.711 306.884L25.711 313.067ZM26.5724 306.087C27.0835 306.087 27.5022 305.697 27.5022 305.218C27.5022 304.743 27.0835 304.352 26.5724 304.352C26.0652 304.352 25.6466 304.743 25.6466 305.218C25.6466 305.697 26.0652 306.087 26.5724 306.087ZM31.5926 313.187C33.2388 313.187 34.2733 312.221 34.3538 310.801L32.7357 310.801C32.6351 311.461 32.2004 311.831 31.6127 311.831C30.8117 311.831 30.2925 311.159 30.2925 309.975C30.2925 308.808 30.8158 308.14 31.6127 308.14C32.2406 308.14 32.6431 308.555 32.7357 309.17L34.3538 309.17C34.2813 307.742 33.1986 306.804 31.5846 306.804C29.7089 306.804 28.5497 308.104 28.5497 310C28.5497 311.879 29.6888 313.187 31.5926 313.187ZM38.2691 313.187C39.7987 313.187 40.8291 312.443 41.0706 311.296L39.4847 311.191C39.3116 311.662 38.8689 311.907 38.2973 311.907C37.44 311.907 36.8966 311.34 36.8966 310.418L36.8966 310.414L41.1068 310.414L41.1068 309.943C41.1068 307.842 39.8349 306.804 38.2007 306.804C36.3814 306.804 35.2021 308.096 35.2021 310.004C35.2021 311.964 36.3653 313.187 38.2691 313.187ZM36.8966 309.352C36.9328 308.647 37.4682 308.084 38.2289 308.084C38.9735 308.084 39.4887 308.615 39.4928 309.352L36.8966 309.352Z\",\"fill\":\"white\",\"key\":14}),React.createElement(\"path\",{\"d\":\"M17.7142 285.056L16.0761 285.056L14.0354 286.348L14.0354 287.894L15.9231 286.711L15.9714 286.711L15.9714 293.3L17.7142 293.3L17.7142 285.056ZM19.6734 293.3L25.55 293.3L25.55 291.875L22.0885 291.875L22.0885 291.818L23.292 290.639C24.9865 289.093 25.4413 288.321 25.4413 287.383C25.4413 285.954 24.2741 284.944 22.5071 284.944C20.7763 284.944 19.5889 285.978 19.5929 287.596L21.2472 287.596C21.2432 286.807 21.7423 286.324 22.495 286.324C23.2195 286.324 23.7589 286.775 23.7589 287.499C23.7589 288.156 23.3564 288.606 22.6077 289.327L19.6734 292.044L19.6734 293.3ZM29.8598 293.412C31.7113 293.412 33.0356 292.394 33.0316 290.985C33.0356 289.959 32.3835 289.226 31.172 289.073L31.172 289.009C32.0937 288.844 32.7297 288.192 32.7257 287.266C32.7297 285.966 31.5906 284.944 29.884 284.944C28.1935 284.944 26.9215 285.934 26.8974 287.359L28.5678 287.359C28.5879 286.731 29.1635 286.324 29.8759 286.324C30.5803 286.324 31.0512 286.751 31.0472 287.371C31.0512 288.019 30.4998 288.457 29.7069 288.457L28.9381 288.457L28.9381 289.737L29.7069 289.737C30.6407 289.737 31.2243 290.204 31.2203 290.868C31.2243 291.525 30.6608 291.975 29.8638 291.975C29.0951 291.975 28.5195 291.573 28.4873 290.969L26.7324 290.969C26.7605 292.41 28.0486 293.412 29.8598 293.412ZM34.1596 291.851L38.1162 291.851L38.1162 293.3L39.7826 293.3L39.7826 291.851L40.8049 291.851L40.8049 290.454L39.7826 290.454L39.7826 285.056L37.601 285.056L34.1596 290.478L34.1596 291.851ZM38.1484 290.454L35.9145 290.454L35.9145 290.389L38.084 286.956L38.1484 286.956L38.1484 290.454ZM52.8468 293.412C54.6823 293.412 55.93 292.217 55.926 290.55C55.93 288.973 54.8272 287.838 53.3419 287.838C52.6174 287.838 51.9935 288.139 51.7037 288.546L51.6554 288.546L51.8688 286.481L55.4712 286.481L55.4712 285.056L50.4318 285.056L50.0414 289.403L51.591 289.681C51.8446 289.339 52.3357 289.126 52.8227 289.126C53.6519 289.13 54.2476 289.729 54.2476 290.595C54.2476 291.452 53.6639 292.044 52.8469 292.044C52.1545 292.044 51.5951 291.609 51.5548 290.969L49.8643 290.969C49.8965 292.394 51.1402 293.412 52.8468 293.412ZM60.3053 293.412C62.1407 293.42 63.3925 292.217 63.3884 290.538C63.3925 288.993 62.3138 287.878 60.8527 287.878C59.947 287.878 59.146 288.313 58.7757 289.041L58.7194 289.041C58.7274 287.411 59.2909 286.413 60.3656 286.413C60.9976 286.413 61.4524 286.755 61.5852 287.359L63.3039 287.359C63.1389 285.974 62.0119 284.919 60.3656 284.919C58.329 284.919 57.0208 286.57 57.0128 289.363C57.0208 292.382 58.6107 293.404 60.3053 293.412ZM60.2972 292.044C59.4922 292.044 58.8965 291.396 58.8965 290.591C58.9005 289.79 59.5083 289.138 60.3093 289.138C61.1143 289.138 61.702 289.77 61.6979 290.587C61.702 291.412 61.1022 292.044 60.2972 292.044ZM68.2105 285.056L66.5723 285.056L64.5316 286.348L64.5316 287.894L66.4193 286.711L66.4676 286.711L66.4676 293.3L68.2104 293.3L68.2105 285.056ZM73.2448 293.412C75.1043 293.412 76.4407 292.418 76.4447 291.082C76.4407 290.051 75.6477 289.21 74.6576 289.045L74.6576 288.989C75.5189 288.812 76.1348 288.067 76.1388 287.161C76.1348 285.885 74.9111 284.944 73.2448 284.944C71.5744 284.944 70.3508 285.885 70.3548 287.161C70.3508 288.063 70.9585 288.812 71.836 288.989L71.836 289.045C70.8297 289.21 70.0449 290.051 70.0489 291.082C70.0449 292.418 71.3852 293.412 73.2448 293.412ZM73.2448 292.132C72.4156 292.132 71.8602 291.641 71.8602 290.945C71.8602 290.232 72.4438 289.717 73.2448 289.717C74.0417 289.717 74.6294 290.232 74.6294 290.945C74.6294 291.645 74.0699 292.132 73.2448 292.132ZM73.2448 288.449C72.5484 288.449 72.0534 287.995 72.0534 287.343C72.0534 286.698 72.5404 286.256 73.2448 286.256C73.9451 286.256 74.4362 286.703 74.4362 287.343C74.4362 287.995 73.9371 288.449 73.2448 288.449ZM85.5332 293.3L91.4098 293.3L91.4098 291.875L87.9483 291.875L87.9483 291.818L89.1518 290.639C90.8463 289.093 91.3011 288.321 91.3011 287.383C91.3011 285.954 90.1339 284.944 88.3669 284.944C86.6361 284.944 85.4487 285.978 85.4527 287.596L87.107 287.596C87.103 286.807 87.6021 286.324 88.3548 286.324C89.0793 286.324 89.6187 286.775 89.6187 287.499C89.6187 288.156 89.2162 288.606 88.4675 289.327L85.5332 292.044L85.5332 293.3ZM95.7196 293.412C97.5711 293.412 98.8954 292.394 98.8914 290.985C98.8954 289.959 98.2433 289.226 97.0318 289.073L97.0318 289.009C97.9535 288.844 98.5895 288.192 98.5854 287.266C98.5895 285.966 97.4504 284.944 95.7438 284.944C94.0532 284.944 92.7813 285.934 92.7572 287.359L94.4276 287.359C94.4477 286.731 95.0233 286.324 95.7357 286.324C96.4401 286.324 96.911 286.751 96.907 287.371C96.911 288.019 96.3596 288.457 95.5667 288.457L94.7979 288.457L94.7979 289.737L95.5667 289.737C96.5005 289.737 97.0841 290.204 97.0801 290.868C97.0841 291.525 96.5206 291.975 95.7236 291.975C94.9549 291.975 94.3793 291.573 94.3471 290.969L92.5922 290.969C92.6203 292.41 93.9083 293.412 95.7196 293.412ZM103.127 284.919C101.283 284.911 100.039 286.119 100.048 287.793C100.039 289.339 101.118 290.454 102.579 290.454C103.485 290.454 104.29 290.015 104.656 289.291L104.713 289.291C104.709 290.925 104.141 291.919 103.066 291.919C102.434 291.919 101.98 291.573 101.847 290.973L100.128 290.973C100.289 292.362 101.416 293.412 103.066 293.412C105.107 293.412 106.415 291.762 106.419 288.965C106.415 285.95 104.821 284.923 103.127 284.919ZM103.139 286.288C103.94 286.288 104.531 286.94 104.539 287.737C104.531 288.538 103.92 289.19 103.123 289.19C102.318 289.19 101.73 288.562 101.738 287.745C101.73 286.92 102.33 286.288 103.139 286.288ZM111.213 285.056L109.575 285.056L107.534 286.348L107.534 287.894L109.422 286.711L109.47 286.711L109.47 293.3L111.213 293.3L111.213 285.056ZM124.274 293.481C126.347 293.481 127.599 291.903 127.603 289.186C127.607 286.489 126.339 284.944 124.274 284.944C122.205 284.944 120.95 286.485 120.946 289.186C120.938 291.895 122.197 293.477 124.274 293.481ZM124.274 292.036C123.328 292.036 122.717 291.086 122.721 289.186C122.725 287.314 123.332 286.372 124.274 286.372C125.212 286.372 125.824 287.314 125.824 289.186C125.828 291.086 125.216 292.036 124.274 292.036ZM132.078 293.481C134.151 293.481 135.403 291.903 135.407 289.186C135.411 286.489 134.143 284.944 132.078 284.944C130.009 284.944 128.753 286.485 128.749 289.186C128.741 291.895 130.001 293.477 132.078 293.481ZM132.078 292.036C131.132 292.036 130.52 291.086 130.524 289.186C130.528 287.314 131.136 286.372 132.078 286.372C133.016 286.372 133.627 287.314 133.627 289.186C133.632 291.086 133.02 292.036 132.078 292.036ZM140.236 285.056L138.597 285.056L136.557 286.348L136.557 287.894L138.444 286.711L138.493 286.711L138.493 293.3L140.236 293.3L140.236 285.056ZM145.781 285.056L144.143 285.056L142.102 286.348L142.102 287.894L143.99 286.711L144.038 286.711L144.038 293.3L145.781 293.3L145.781 285.056Z\",\"fill\":\"white\",\"key\":15}),React.createElement(\"path\",{\"d\":\"M146.32 313.61L143.876 313.61L145.403 304.061L147.847 304.061L146.32 313.61ZM141.82 304.061L139.49 310.629L139.214 309.214L139.214 309.215L138.392 304.921C138.392 304.921 138.293 304.061 137.233 304.061L133.381 304.061L133.336 304.223C133.336 304.223 134.514 304.472 135.892 305.314L138.015 313.61L140.562 313.61L144.45 304.061L141.82 304.061ZM161.042 313.61L163.286 313.61L161.33 304.061L159.365 304.061C158.458 304.061 158.237 304.773 158.237 304.773L154.592 313.61L157.14 313.61L157.649 312.191L160.756 312.191L161.042 313.61ZM158.353 310.232L159.637 306.659L160.359 310.232L158.353 310.232ZM154.783 306.357L155.132 304.307C155.132 304.307 154.056 303.891 152.934 303.891C151.721 303.891 148.841 304.43 148.841 307.052C148.841 309.518 152.221 309.549 152.221 310.845C152.221 312.14 149.189 311.908 148.189 311.091L147.825 313.235C147.825 313.235 148.917 313.774 150.584 313.774C152.252 313.774 154.768 312.896 154.768 310.505C154.768 308.023 151.357 307.792 151.357 306.712C151.357 305.633 153.737 305.771 154.783 306.357Z\",\"fill\":\"white\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M139.214 309.215L138.392 304.921C138.392 304.921 138.293 304.061 137.233 304.061L133.381 304.061L133.336 304.223C133.336 304.223 135.187 304.613 136.963 306.075C138.661 307.473 139.214 309.215 139.214 309.215Z\",\"fill\":\"#FED74C\",\"key\":17}),React.createElement(\"rect\",{\"x\":\"2.70844\",\"width\":\"194.206\",\"height\":\"79.775\",\"rx\":\"5.66726\",\"fill\":\"#44B21A\",\"key\":18}),React.createElement(\"rect\",{\"x\":\"15.7524\",\"y\":\"33.1807\",\"width\":\"121.741\",\"height\":\"10.5896\",\"rx\":\"2.12522\",\"fill\":\"#99EC79\",\"key\":19}),React.createElement(\"path\",{\"d\":\"M22.6394 56.7047L20.9046 56.7047L20.9046 61.889L20.8322 61.889L17.2741 56.7047L15.7445 56.7047L15.7445 64.948L17.4874 64.948L17.4874 59.7597L17.5478 59.7597L21.1341 64.948L22.6394 64.948L22.6394 56.7047ZM24.0794 64.948L29.3562 64.948L29.3562 63.5111L25.8222 63.5111L25.8222 56.7047L24.0794 56.7047L24.0794 64.948ZM36.068 56.5679C34.2245 56.5598 32.9808 57.7673 32.9888 59.4417C32.9808 60.9874 34.0595 62.1023 35.5206 62.1023C36.4262 62.1023 37.2312 61.6636 37.5975 60.9391L37.6539 60.9391C37.6498 62.5732 37.0823 63.5674 36.0076 63.5674C35.3757 63.5674 34.9209 63.2213 34.788 62.6215L33.0693 62.6215C33.2303 64.0102 34.3573 65.0607 36.0076 65.0607C38.0483 65.0607 39.3565 63.4104 39.3605 60.613C39.3565 57.5983 37.7625 56.5719 36.068 56.5679ZM36.0801 57.9364C36.8811 57.9364 37.4727 58.5884 37.4808 59.3854C37.4727 60.1864 36.8609 60.8384 36.064 60.8384C35.259 60.8384 34.6713 60.2105 34.6794 59.3934C34.6713 58.5683 35.271 57.9364 36.0801 57.9364ZM44.1543 56.7047L42.5161 56.7047L40.4754 57.9968L40.4754 59.5424L42.3632 58.359L42.4115 58.359L42.4115 64.948L44.1543 64.948L44.1543 56.7047ZM50.206 64.948L50.8178 63.0683L53.7923 63.0683L54.4041 64.948L56.2717 64.948L53.43 56.7047L51.184 56.7047L48.3383 64.948L50.206 64.948ZM51.2605 61.7078L52.2748 58.5884L52.3392 58.5884L53.3535 61.7078L51.2605 61.7078ZM57.2639 64.948L60.7858 64.948C62.6373 64.948 63.6234 63.982 63.6234 62.6698C63.6234 61.4502 62.75 60.7137 61.8122 60.6694L61.8122 60.5889C62.6695 60.3957 63.3014 59.7879 63.3014 58.8179C63.3014 57.5822 62.3837 56.7047 60.5644 56.7047L57.2639 56.7047L57.2639 64.948ZM59.0067 63.5231L59.0067 61.3335L60.4678 61.3335C61.305 61.3335 61.8243 61.8165 61.8243 62.4968C61.8243 63.1166 61.4016 63.5231 60.4276 63.5231L59.0067 63.5231ZM59.0067 60.1542L59.0067 58.1135L60.331 58.1135C61.1038 58.1135 61.5425 58.512 61.5425 59.1077C61.5425 59.7597 61.0112 60.1542 60.2988 60.1542L59.0067 60.1542ZM71.6524 56.7047L69.9176 56.7047L69.9176 61.889L69.8452 61.889L66.287 56.7047L64.7575 56.7047L64.7575 64.948L66.5003 64.948L66.5003 59.7597L66.5607 59.7597L70.147 64.948L71.6524 64.948L71.6524 56.7047ZM74.5132 64.948L75.125 63.0683L78.0995 63.0683L78.7113 64.948L80.5789 64.948L77.7373 56.7047L75.4913 56.7047L72.6456 64.948L74.5132 64.948ZM75.5678 61.7078L76.5821 58.5884L76.6465 58.5884L77.6608 61.7078L75.5678 61.7078ZM84.7549 65.1291C86.8278 65.1291 88.0796 63.5513 88.0836 60.8344C88.0877 58.1376 86.8198 56.592 84.7549 56.592C82.6861 56.592 81.4302 58.1336 81.4262 60.8344C81.4182 63.5433 82.678 65.1251 84.7549 65.1291ZM84.7549 63.6841C83.809 63.6841 83.1972 62.7342 83.2013 60.8344C83.2053 58.9628 83.8131 58.0209 84.7549 58.0209C85.6928 58.0209 86.3046 58.9628 86.3046 60.8344C86.3086 62.7342 85.6968 63.6841 84.7549 63.6841ZM89.2016 63.499L93.1582 63.499L93.1582 64.948L94.8246 64.948L94.8246 63.499L95.8469 63.499L95.8469 62.1023L94.8246 62.1023L94.8246 56.7047L92.643 56.7047L89.2016 62.1265L89.2016 63.499ZM93.1904 62.1023L90.9565 62.1023L90.9565 62.0379L93.126 58.6045L93.1904 58.6045L93.1904 62.1023ZM100.484 56.7047L98.8456 56.7047L96.8049 57.9968L96.8049 59.5424L98.6927 58.359L98.741 58.359L98.741 64.948L100.484 64.948L100.484 56.7047ZM102.769 64.948L104.568 64.948L107.99 58.1497L107.99 56.7047L102.206 56.7047L102.206 58.1296L106.186 58.1296L106.186 58.1859L102.769 64.948ZM112.77 56.7047L111.132 56.7047L109.091 57.9968L109.091 59.5424L110.979 58.359L111.027 58.359L111.027 64.948L112.77 64.948L112.77 56.7047ZM117.893 65.0607C119.729 65.0688 120.98 63.8653 120.976 62.1868C120.98 60.6412 119.902 59.5263 118.441 59.5263C117.535 59.5263 116.734 59.961 116.364 60.6895L116.307 60.6895C116.315 59.0594 116.879 58.0612 117.954 58.0612C118.585 58.0612 119.04 58.4033 119.173 59.007L120.892 59.007C120.727 57.6224 119.6 56.5679 117.954 56.5679C115.917 56.5679 114.609 58.2181 114.601 61.0115C114.609 64.0303 116.199 65.0527 117.893 65.0607ZM117.885 63.6922C117.08 63.6922 116.484 63.0442 116.484 62.2392C116.488 61.4382 117.096 60.7861 117.897 60.7861C118.702 60.7861 119.29 61.4181 119.286 62.2351C119.29 63.0603 118.69 63.6922 117.885 63.6922ZM122.087 63.499L126.044 63.499L126.044 64.948L127.71 64.948L127.71 63.499L128.733 63.499L128.733 62.1023L127.71 62.1023L127.71 56.7047L125.529 56.7047L122.087 62.1265L122.087 63.499ZM126.076 62.1023L123.842 62.1023L123.842 62.0379L126.012 58.6045L126.076 58.6045L126.076 62.1023ZM132.941 65.0607C134.792 65.0607 136.117 64.0424 136.112 62.6336C136.117 61.6072 135.464 60.8747 134.253 60.7217L134.253 60.6573C135.175 60.4923 135.811 59.8402 135.807 58.9145C135.811 57.6144 134.672 56.592 132.965 56.592C131.274 56.592 130.002 57.5822 129.978 59.0071L131.649 59.0071C131.669 58.3791 132.244 57.9726 132.957 57.9726C133.661 57.9726 134.132 58.3993 134.128 59.0191C134.132 59.6672 133.581 60.1059 132.788 60.1059L132.019 60.1059L132.019 61.3859L132.788 61.3859C133.722 61.3859 134.305 61.8528 134.301 62.5169C134.305 63.173 133.742 63.6238 132.945 63.6238C132.176 63.6238 131.6 63.2213 131.568 62.6175L129.813 62.6175C129.841 64.0585 131.129 65.0607 132.941 65.0607ZM140.597 65.1291C142.67 65.1291 143.922 63.5513 143.926 60.8344C143.93 58.1376 142.662 56.592 140.597 56.592C138.529 56.592 137.273 58.1336 137.269 60.8344C137.261 63.5433 138.52 65.1251 140.597 65.1291ZM140.597 63.6842C139.652 63.6842 139.04 62.7342 139.044 60.8344C139.048 58.9628 139.656 58.0209 140.597 58.0209C141.535 58.0209 142.147 58.9628 142.147 60.8344C142.151 62.7342 141.539 63.6842 140.597 63.6842ZM148.401 65.1291C150.474 65.1291 151.726 63.5513 151.73 60.8344C151.734 58.1376 150.466 56.592 148.401 56.592C146.332 56.592 145.076 58.1336 145.072 60.8344C145.064 63.5433 146.324 65.1251 148.401 65.1291ZM148.401 63.6842C147.455 63.6842 146.843 62.7342 146.847 60.8344C146.851 58.9628 147.459 58.0209 148.401 58.0209C149.339 58.0209 149.951 58.9628 149.951 60.8344C149.955 62.7342 149.343 63.6842 148.401 63.6842Z\",\"fill\":\"white\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M20.8649 15.6392L22.7441 15.6392C22.7169 13.9865 21.3585 12.8454 19.2936 12.8454C17.2605 12.8454 15.7707 13.9683 15.7798 15.6528C15.7752 17.0203 16.7397 17.8037 18.3065 18.1795L19.3163 18.4331C20.326 18.6776 20.8875 18.9675 20.8921 19.5923C20.8875 20.2716 20.2445 20.7334 19.2483 20.7334C18.2295 20.7334 17.4959 20.2625 17.4325 19.3342L15.5352 19.3342C15.585 21.3402 17.0205 22.3772 19.271 22.3772C21.5351 22.3772 22.8663 21.2949 22.8709 19.5969C22.8663 18.0528 21.7026 17.2332 20.0906 16.8709L19.2574 16.6717C18.4514 16.486 17.7767 16.1872 17.7903 15.5215C17.7903 14.9238 18.3201 14.4846 19.28 14.4846C20.2174 14.4846 20.7924 14.9102 20.8649 15.6392ZM24.1897 22.2459L30.4567 22.2459L30.4567 20.6293L26.1504 20.6293L26.1504 18.415L30.1171 18.415L30.1171 16.7985L26.1504 16.7985L26.1504 14.5887L30.4386 14.5887L30.4386 12.9721L24.1897 12.9721L24.1897 22.2459ZM31.9974 22.2459L33.9581 22.2459L33.9581 19.2391L35.6064 19.2391C37.7391 19.2391 38.9799 17.9667 38.9799 16.1147C38.9799 14.2717 37.7618 12.9722 35.6562 12.9721L31.9974 12.9721L31.9974 22.2459ZM33.9581 17.6679L33.9581 14.5751L35.2803 14.5751C36.4124 14.5751 36.9603 15.191 36.9603 16.1147C36.9603 17.0339 36.4124 17.6679 35.2894 17.6679L33.9581 17.6679ZM40.7809 22.2459L41.4692 20.1312L44.8155 20.1312L45.5038 22.2459L47.6049 22.2459L44.408 12.9722L41.8813 12.9722L38.6799 22.2459L40.7809 22.2459ZM41.9673 18.6007L43.1084 15.0913L43.1809 15.0913L44.322 18.6007L41.9673 18.6007Z\",\"fill\":\"white\",\"key\":21}),React.createElement(\"rect\",{\"x\":\"133\",\"y\":\"115\",\"width\":\"194.206\",\"height\":\"72.2575\",\"rx\":\"5.66726\",\"fill\":\"#CC4A00\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M151.335 156.018L149.185 156.018L146.507 157.714L146.507 159.742L148.984 158.189L149.048 158.189L149.048 166.837L151.335 166.837L151.335 156.018ZM153.907 166.837L161.62 166.837L161.62 164.967L157.076 164.967L157.076 164.893L158.656 163.345C160.88 161.317 161.477 160.302 161.477 159.071C161.477 157.196 159.945 155.87 157.626 155.87C155.354 155.87 153.796 157.228 153.801 159.351L155.972 159.351C155.967 158.316 156.622 157.682 157.61 157.682C158.561 157.682 159.269 158.274 159.269 159.225C159.269 160.086 158.741 160.677 157.758 161.623L153.907 165.189L153.907 166.837ZM165.612 166.99C166.812 166.99 167.588 166.467 167.984 165.712L168.048 165.712L168.048 166.837L170.182 166.837L170.182 161.364C170.182 159.431 168.544 158.617 166.738 158.617C164.793 158.617 163.515 159.547 163.203 161.026L165.285 161.195C165.438 160.656 165.919 160.26 166.727 160.26C167.493 160.26 167.931 160.646 167.931 161.311L167.931 161.343C167.931 161.866 167.377 161.935 165.966 162.072C164.36 162.22 162.918 162.759 162.918 164.571C162.918 166.177 164.064 166.99 165.612 166.99ZM166.257 165.437C165.565 165.437 165.068 165.115 165.068 164.497C165.068 163.863 165.591 163.551 166.384 163.44C166.875 163.372 167.678 163.255 167.947 163.076L167.947 163.937C167.947 164.787 167.245 165.437 166.257 165.437ZM174.178 156.018L171.928 156.018L171.928 166.837L174.178 166.837L174.178 156.018ZM180.202 167.075C182.923 167.075 184.566 165.004 184.571 161.438C184.576 157.899 182.912 155.87 180.202 155.87C177.487 155.87 175.839 157.893 175.833 161.438C175.823 164.993 177.476 167.07 180.202 167.075ZM180.202 165.178C178.961 165.178 178.158 163.932 178.163 161.438C178.168 158.982 178.966 157.745 180.202 157.745C181.433 157.745 182.236 158.982 182.236 161.438C182.241 163.932 181.438 165.178 180.202 165.178ZM190.201 166.985C192.632 166.985 194.37 165.649 194.364 163.8C194.37 162.452 193.514 161.491 191.924 161.29L191.924 161.206C193.133 160.989 193.968 160.133 193.963 158.918C193.968 157.212 192.473 155.87 190.233 155.87C188.014 155.87 186.345 157.17 186.313 159.04L188.506 159.04C188.532 158.216 189.287 157.682 190.223 157.682C191.147 157.682 191.765 158.242 191.76 159.055C191.765 159.906 191.041 160.482 190.001 160.482L188.992 160.482L188.992 162.162L190.001 162.162C191.226 162.162 191.992 162.775 191.987 163.646C191.992 164.507 191.253 165.099 190.207 165.099C189.198 165.099 188.442 164.571 188.4 163.778L186.097 163.778C186.134 165.67 187.824 166.985 190.201 166.985ZM199.907 166.837C203.204 166.837 205.201 164.798 205.201 161.417C205.201 158.046 203.204 156.018 199.939 156.018L196.072 156.018L196.072 166.837L199.907 166.837ZM198.359 164.877L198.359 157.978L199.818 157.978C201.846 157.978 202.919 159.013 202.919 161.417C202.919 163.831 201.846 164.877 199.812 164.877L198.359 164.877ZM210.519 166.996C212.68 166.996 214.038 165.728 214.143 163.863L212.02 163.863C211.888 164.729 211.317 165.215 210.546 165.215C209.494 165.215 208.813 164.333 208.813 162.78C208.813 161.248 209.5 160.371 210.546 160.371C211.37 160.371 211.898 160.915 212.02 161.723L214.143 161.723C214.048 159.848 212.627 158.617 210.509 158.617C208.047 158.617 206.525 160.323 206.525 162.812C206.525 165.279 208.021 166.996 210.519 166.996ZM215.584 166.837L217.835 166.837L217.835 158.723L215.584 158.723L215.584 166.837ZM216.715 157.677C217.386 157.677 217.935 157.164 217.935 156.536C217.935 155.912 217.386 155.4 216.715 155.4C216.049 155.4 215.5 155.912 215.5 156.536C215.5 157.164 216.049 157.677 216.715 157.677ZM223.336 166.996C225.343 166.996 226.695 166.018 227.012 164.513L224.931 164.375C224.704 164.993 224.123 165.316 223.373 165.316C222.247 165.316 221.534 164.571 221.534 163.361L221.534 163.356L227.06 163.356L227.06 162.738C227.06 159.98 225.391 158.617 223.246 158.617C220.858 158.617 219.31 160.313 219.31 162.817C219.31 165.39 220.837 166.996 223.336 166.996ZM221.534 161.961C221.582 161.037 222.284 160.297 223.283 160.297C224.26 160.297 224.936 160.994 224.942 161.961L221.534 161.961ZM230.779 156.018L228.529 156.018L228.529 166.837L230.779 166.837L230.779 156.018ZM236.475 155.838C234.056 155.828 232.423 157.413 232.434 159.61C232.423 161.639 233.839 163.102 235.757 163.102C236.946 163.102 238.002 162.526 238.483 161.575L238.557 161.575C238.552 163.72 237.807 165.025 236.396 165.025C235.567 165.025 234.97 164.571 234.795 163.784L232.54 163.784C232.751 165.606 234.23 166.985 236.396 166.985C239.075 166.985 240.792 164.819 240.797 161.148C240.792 157.191 238.7 155.844 236.475 155.838ZM236.491 157.634C237.543 157.634 238.319 158.49 238.33 159.536C238.319 160.588 237.516 161.443 236.47 161.443C235.414 161.443 234.642 160.619 234.653 159.547C234.642 158.464 235.429 157.634 236.491 157.634ZM246.624 167.075C249.344 167.075 250.987 165.004 250.993 161.438C250.998 157.899 249.334 155.87 246.624 155.87C243.908 155.87 242.26 157.893 242.255 161.438C242.244 164.993 243.898 167.07 246.624 167.075ZM246.624 165.178C245.382 165.178 244.579 163.932 244.585 161.438C244.59 158.982 245.388 157.745 246.624 157.745C247.855 157.745 248.658 158.982 248.658 161.438C248.663 163.932 247.86 165.178 246.624 165.178ZM256.311 166.996C258.472 166.996 259.83 165.728 259.935 163.863L257.812 163.863C257.68 164.729 257.109 165.215 256.338 165.215C255.286 165.215 254.605 164.333 254.605 162.78C254.605 161.248 255.292 160.371 256.338 160.371C257.162 160.371 257.69 160.915 257.812 161.723L259.935 161.723C259.84 159.848 258.419 158.617 256.301 158.617C253.839 158.617 252.317 160.323 252.317 162.812C252.317 165.279 253.812 166.996 256.311 166.996ZM263.69 166.99C264.889 166.99 265.666 166.467 266.062 165.712L266.126 165.712L266.126 166.837L268.26 166.837L268.26 161.364C268.26 159.431 266.622 158.617 264.815 158.617C262.871 158.617 261.593 159.547 261.281 161.026L263.363 161.195C263.516 160.656 263.997 160.26 264.805 160.26C265.571 160.26 266.009 160.646 266.009 161.311L266.009 161.343C266.009 161.866 265.455 161.935 264.044 162.072C262.438 162.22 260.996 162.759 260.996 164.571C260.996 166.177 262.142 166.99 263.69 166.99ZM264.335 165.437C263.643 165.437 263.146 165.115 263.146 164.497C263.146 163.863 263.669 163.551 264.461 163.44C264.953 163.372 265.756 163.255 266.025 163.076L266.025 163.937C266.025 164.787 265.323 165.437 264.335 165.437ZM270.048 166.837L272.336 166.837L272.336 162.368L276.736 162.368L276.736 160.482L272.336 160.482L272.336 157.904L277.212 157.904L277.212 156.018L270.048 156.018L270.048 166.837Z\",\"fill\":\"white\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M158.281 138.916C157.431 142.324 153.98 144.398 150.572 143.548C147.166 142.698 145.092 139.247 145.942 135.84C146.791 132.432 150.242 130.358 153.649 131.207C157.057 132.057 159.13 135.509 158.281 138.916Z\",\"fill\":\"#F7931A\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M154.915 136.471C155.042 135.625 154.398 135.17 153.516 134.867L153.802 133.72L153.104 133.546L152.826 134.663C152.643 134.617 152.454 134.574 152.267 134.531L152.547 133.407L151.85 133.233L151.564 134.379C151.412 134.345 151.263 134.311 151.118 134.275L151.119 134.271L150.157 134.031L149.971 134.776C149.971 134.776 150.489 134.895 150.478 134.902C150.76 134.973 150.811 135.16 150.803 135.308L150.477 136.614C150.497 136.619 150.522 136.626 150.55 136.637C150.527 136.632 150.502 136.625 150.476 136.619L150.02 138.449C149.985 138.535 149.898 138.663 149.7 138.615C149.707 138.625 149.193 138.488 149.193 138.488L148.846 139.287L149.754 139.513C149.923 139.556 150.089 139.6 150.252 139.642L149.963 140.801L150.66 140.975L150.946 139.828C151.137 139.88 151.321 139.927 151.502 139.972L151.217 141.114L151.915 141.288L152.204 140.131C153.394 140.356 154.289 140.265 154.666 139.189C154.969 138.322 154.65 137.822 154.024 137.496C154.48 137.391 154.824 137.091 154.915 136.471ZM153.321 138.707C153.105 139.574 151.646 139.106 151.173 138.988L151.556 137.452C152.029 137.57 153.546 137.804 153.321 138.707ZM153.537 136.459C153.34 137.247 152.125 136.847 151.732 136.749L152.079 135.355C152.473 135.453 153.742 135.637 153.537 136.459Z\",\"fill\":\"white\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M164.391 134.866C164.907 134.866 165.352 134.958 165.727 135.139C166.103 135.323 166.413 135.57 166.662 135.88C166.908 136.192 167.091 136.557 167.209 136.975C167.326 137.394 167.385 137.845 167.385 138.327C167.385 139.068 167.249 139.768 166.975 140.428C166.701 141.089 166.329 141.662 165.856 142.151C165.384 142.639 164.825 143.025 164.182 143.309C163.539 143.594 162.841 143.736 162.09 143.736C161.993 143.736 161.823 143.733 161.582 143.728C161.341 143.723 161.064 143.698 160.754 143.656C160.442 143.613 160.112 143.548 159.764 143.462C159.415 143.378 159.085 143.259 158.773 143.108L161.558 131.406L164.053 131.019L163.056 135.172C163.269 135.076 163.484 135.001 163.699 134.947C163.914 134.893 164.144 134.866 164.391 134.866ZM162.298 141.757C162.674 141.757 163.028 141.665 163.361 141.483C163.694 141.301 163.982 141.056 164.223 140.751C164.464 140.444 164.655 140.098 164.794 139.712C164.933 139.326 165.004 138.923 165.004 138.504C165.004 137.989 164.918 137.587 164.746 137.296C164.574 137.007 164.257 136.862 163.796 136.862C163.645 136.862 163.45 136.891 163.209 136.942C162.967 136.997 162.75 137.11 162.556 137.281L161.494 141.691C161.558 141.703 161.615 141.713 161.663 141.723C161.711 141.734 161.763 141.742 161.815 141.747C161.87 141.754 161.933 141.757 162.009 141.757C162.085 141.757 162.18 141.757 162.298 141.757Z\",\"fill\":\"white\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M169.972 143.512H167.589L169.602 135.045H172L169.972 143.512ZM171.131 134.014C170.799 134.014 170.497 133.915 170.23 133.716C169.96 133.519 169.827 133.216 169.827 132.806C169.827 132.581 169.872 132.37 169.963 132.171C170.055 131.972 170.175 131.801 170.326 131.656C170.476 131.512 170.651 131.396 170.849 131.309C171.048 131.224 171.26 131.181 171.485 131.181C171.818 131.181 172.118 131.28 172.386 131.479C172.654 131.678 172.788 131.981 172.788 132.388C172.788 132.614 172.743 132.826 172.651 133.025C172.561 133.223 172.44 133.395 172.29 133.54C172.14 133.685 171.964 133.799 171.767 133.886C171.568 133.972 171.356 134.014 171.131 134.014Z\",\"fill\":\"white\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M174.088 132.935L176.584 132.549L175.971 135.045H178.644L178.161 137.008H175.505L174.797 139.97C174.732 140.216 174.695 140.447 174.685 140.661C174.673 140.877 174.7 141.061 174.764 141.217C174.828 141.373 174.943 141.493 175.11 141.578C175.277 141.665 175.515 141.708 175.827 141.708C176.084 141.708 176.334 141.684 176.576 141.635C176.817 141.588 177.061 141.521 177.308 141.434L177.485 143.27C177.163 143.388 176.815 143.49 176.439 143.575C176.063 143.662 175.617 143.704 175.103 143.704C174.362 143.704 173.788 143.594 173.38 143.375C172.971 143.155 172.683 142.853 172.51 142.472C172.34 142.092 172.264 141.655 172.285 141.161C172.307 140.667 172.381 140.147 172.51 139.599L174.088 132.935Z\",\"fill\":\"white\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M178.539 140.131C178.539 139.402 178.657 138.714 178.893 138.07C179.129 137.426 179.468 136.862 179.908 136.379C180.347 135.897 180.881 135.516 181.51 135.236C182.136 134.958 182.838 134.818 183.61 134.818C184.094 134.818 184.526 134.863 184.906 134.955C185.287 135.047 185.633 135.167 185.945 135.317L185.123 137.185C184.908 137.098 184.686 137.021 184.455 136.952C184.225 136.881 183.943 136.847 183.61 136.847C182.815 136.847 182.186 137.121 181.718 137.667C181.252 138.214 181.018 138.95 181.018 139.873C181.018 140.42 181.136 140.863 181.373 141.201C181.608 141.54 182.044 141.708 182.676 141.708C182.988 141.708 183.289 141.676 183.578 141.612C183.868 141.548 184.125 141.467 184.351 141.371L184.529 143.286C184.227 143.403 183.895 143.508 183.531 143.601C183.165 143.69 182.73 143.736 182.226 143.736C181.56 143.736 180.997 143.639 180.536 143.447C180.075 143.252 179.694 142.994 179.394 142.666C179.092 142.338 178.875 141.955 178.741 141.514C178.607 141.075 178.539 140.613 178.539 140.131Z\",\"fill\":\"white\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M189.123 143.736C188.554 143.736 188.06 143.65 187.641 143.478C187.224 143.307 186.878 143.066 186.604 142.754C186.33 142.443 186.125 142.076 185.984 141.652C185.844 141.228 185.776 140.759 185.776 140.244C185.776 139.599 185.88 138.955 186.089 138.312C186.297 137.667 186.606 137.088 187.015 136.574C187.421 136.058 187.922 135.637 188.511 135.308C189.1 134.982 189.778 134.818 190.539 134.818C191.097 134.818 191.588 134.904 192.013 135.076C192.436 135.247 192.784 135.49 193.059 135.8C193.332 136.112 193.539 136.479 193.678 136.903C193.818 137.326 193.887 137.797 193.887 138.311C193.887 138.954 193.785 139.599 193.582 140.244C193.379 140.886 193.078 141.466 192.681 141.982C192.284 142.497 191.788 142.918 191.192 143.245C190.597 143.572 189.907 143.736 189.123 143.736ZM190.314 136.847C189.961 136.847 189.648 136.949 189.381 137.152C189.113 137.357 188.887 137.614 188.706 137.925C188.522 138.237 188.386 138.577 188.294 138.947C188.203 139.318 188.158 139.669 188.158 140.001C188.158 140.539 188.244 140.957 188.415 141.258C188.588 141.558 188.898 141.708 189.349 141.708C189.703 141.708 190.014 141.607 190.283 141.402C190.55 141.199 190.775 140.941 190.958 140.63C191.141 140.319 191.278 139.978 191.37 139.607C191.46 139.238 191.506 138.885 191.506 138.553C191.506 138.017 191.42 137.598 191.248 137.297C191.076 136.997 190.764 136.847 190.314 136.847Z\",\"fill\":\"white\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M196.483 143.512H194.099L196.111 135.045H198.511L196.483 143.512ZM197.641 134.014C197.309 134.014 197.007 133.915 196.74 133.716C196.472 133.519 196.337 133.216 196.337 132.806C196.337 132.581 196.383 132.37 196.474 132.171C196.565 131.972 196.686 131.801 196.837 131.656C196.986 131.512 197.162 131.396 197.36 131.309C197.558 131.224 197.77 131.181 197.995 131.181C198.328 131.181 198.629 131.28 198.897 131.479C199.165 131.678 199.3 131.981 199.3 132.388C199.3 132.614 199.252 132.826 199.162 133.025C199.072 133.223 198.951 133.395 198.801 133.54C198.65 133.685 198.476 133.799 198.278 133.886C198.079 133.972 197.867 134.014 197.641 134.014Z\",\"fill\":\"white\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M200.228 135.43C200.409 135.377 200.611 135.314 200.831 135.244C201.051 135.175 201.297 135.111 201.572 135.053C201.845 134.993 202.152 134.944 202.489 134.907C202.827 134.869 203.212 134.85 203.639 134.85C204.896 134.85 205.762 135.216 206.24 135.945C206.718 136.675 206.801 137.674 206.491 138.939L205.395 143.511H202.997L204.059 139.036C204.124 138.756 204.174 138.486 204.212 138.222C204.25 137.961 204.248 137.73 204.203 137.53C204.161 137.333 204.061 137.172 203.906 137.047C203.749 136.924 203.512 136.862 203.19 136.862C202.879 136.862 202.563 136.895 202.24 136.96L200.679 143.511H198.279L200.228 135.43Z\",\"fill\":\"white\",\"key\":32}),React.createElement(\"rect\",{\"x\":\"155\",\"y\":\"361\",\"width\":\"171.742\",\"height\":\"72.2576\",\"rx\":\"5.66726\",\"fill\":\"#006CCC\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M175.734 417.371C177.239 417.371 178.713 417.017 179.374 416.642L178.851 415.11C178.285 415.342 177.07 415.649 175.855 415.649C172.411 415.649 170.541 413.821 170.53 410.482C170.541 407.46 172.263 405.183 175.776 405.183C178.317 405.183 180.679 406.398 180.673 409.716C180.679 411.782 180.298 412.722 179.569 412.722C179.205 412.722 178.983 412.447 178.977 411.956L178.977 406.8L177.324 406.8L177.324 407.391L177.25 407.391C177.07 406.927 175.95 406.488 174.762 406.668C173.351 406.874 171.83 408.031 171.819 410.482C171.83 412.97 173.246 414.243 174.915 414.333C176.114 414.402 177.192 413.9 177.44 413.261L177.504 413.261C177.62 413.99 178.106 414.486 179.331 414.397C181.614 414.27 182.485 412.431 182.48 409.837C182.485 406.081 180.002 403.482 175.802 403.482C171.259 403.482 168.655 406.298 168.649 410.545C168.655 414.861 171.238 417.371 175.734 417.371ZM175.491 412.595C174.112 412.595 173.647 411.539 173.642 410.419C173.647 409.214 174.307 408.427 175.48 408.427C176.817 408.427 177.218 409.135 177.224 410.403C177.239 411.84 176.785 412.595 175.491 412.595ZM185.883 414.254L186.686 411.787L190.591 411.787L191.394 414.254L193.845 414.254L190.115 403.435L187.167 403.435L183.432 414.254L185.883 414.254ZM187.268 410.001L188.599 405.907L188.683 405.907L190.015 410.001L187.268 410.001ZM197.355 403.435L195.105 403.435L195.105 414.254L197.355 414.254L197.355 403.435ZM199.158 414.254L201.409 414.254L201.409 406.139L199.158 406.139L199.158 414.254ZM200.289 405.093C200.959 405.093 201.509 404.581 201.509 403.952C201.509 403.329 200.959 402.816 200.289 402.816C199.623 402.816 199.073 403.329 199.073 403.952C199.073 404.581 199.623 405.093 200.289 405.093ZM206.878 414.412C209.038 414.412 210.396 413.145 210.502 411.28L208.378 411.28C208.246 412.146 207.675 412.632 206.904 412.632C205.853 412.632 205.171 411.75 205.171 410.197C205.171 408.665 205.858 407.788 206.904 407.788C207.728 407.788 208.256 408.332 208.378 409.14L210.502 409.14C210.407 407.265 208.985 406.034 206.867 406.034C204.405 406.034 202.884 407.74 202.884 410.228C202.884 412.695 204.379 414.412 206.878 414.412ZM215.641 414.412C217.648 414.412 219 413.435 219.317 411.929L217.236 411.792C217.009 412.41 216.428 412.732 215.678 412.732C214.552 412.732 213.839 411.988 213.839 410.778L213.839 410.773L219.365 410.773L219.365 410.154C219.365 407.397 217.696 406.034 215.551 406.034C213.163 406.034 211.615 407.73 211.615 410.234C211.615 412.806 213.142 414.412 215.641 414.412ZM213.839 409.378C213.887 408.453 214.589 407.714 215.588 407.714C216.565 407.714 217.241 408.411 217.247 409.378L213.839 409.378ZM220.876 414.254L223.163 414.254L223.163 411.179L224.289 409.806L227.252 414.254L229.989 414.254L225.926 408.279L229.941 403.435L227.199 403.435L223.306 408.205L223.163 408.205L223.163 403.435L220.876 403.435L220.876 414.254ZM235.311 414.492C238.032 414.492 239.675 412.421 239.68 408.855C239.686 405.315 238.021 403.287 235.311 403.287C232.596 403.287 230.948 405.31 230.942 408.855C230.932 412.41 232.585 414.486 235.311 414.492ZM235.311 412.595C234.07 412.595 233.267 411.348 233.272 408.855C233.277 406.398 234.075 405.162 235.311 405.162C236.542 405.162 237.345 406.398 237.345 408.855C237.351 411.348 236.548 412.595 235.311 412.595ZM241.311 414.254L249.024 414.254L249.024 412.384L244.481 412.384L244.481 412.31L246.061 410.762C248.285 408.733 248.882 407.719 248.882 406.488C248.882 404.613 247.35 403.287 245.031 403.287C242.759 403.287 241.2 404.644 241.206 406.768L243.377 406.768C243.372 405.733 244.027 405.099 245.015 405.099C245.966 405.099 246.673 405.69 246.673 406.641C246.673 407.502 246.145 408.094 245.163 409.04L241.311 412.606L241.311 414.254ZM254.681 414.402C257.111 414.402 258.849 413.065 258.844 411.216C258.849 409.869 257.993 408.908 256.403 408.707L256.403 408.622C257.613 408.406 258.448 407.55 258.442 406.335C258.448 404.629 256.953 403.287 254.713 403.287C252.494 403.287 250.824 404.586 250.793 406.456L252.985 406.456C253.012 405.632 253.767 405.099 254.702 405.099C255.627 405.099 256.245 405.659 256.239 406.472C256.245 407.323 255.521 407.899 254.48 407.899L253.471 407.899L253.471 409.579L254.48 409.579C255.706 409.579 256.472 410.191 256.467 411.063C256.472 411.924 255.732 412.516 254.686 412.516C253.677 412.516 252.922 411.988 252.88 411.195L250.576 411.195C250.613 413.086 252.304 414.402 254.681 414.402ZM260.324 412.352L265.517 412.352L265.517 414.254L267.705 414.254L267.705 412.352L269.046 412.352L269.046 410.519L267.705 410.519L267.705 403.435L264.841 403.435L260.324 410.551L260.324 412.352ZM265.56 410.519L262.628 410.519L262.628 410.434L265.475 405.928L265.56 405.928L265.56 410.519Z\",\"fill\":\"white\",\"key\":34}),React.createElement(\"rect\",{\"x\":\"168\",\"y\":\"373\",\"width\":\"20\",\"height\":\"18\",\"rx\":\"3\",\"fill\":\"#66B7FF\",\"key\":35}),React.createElement(\"defs\",{\"key\":36},[React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint0\",\"x1\":\"150.078\",\"y1\":\"652.043\",\"x2\":\"247.362\",\"y2\":\"628.945\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":0},[React.createElement(\"stop\",{\"stopColor\":\"#FF8100\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.0001\",\"stopColor\":\"#FF8100\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.5\",\"stopColor\":\"#FF5D00\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#FF3600\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint1\",\"x1\":\"168.087\",\"y1\":\"515.932\",\"x2\":\"337.601\",\"y2\":\"355.136\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":1},[React.createElement(\"stop\",{\"stopColor\":\"#55DF20\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#0AC222\",\"key\":1})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint2\",\"x1\":\"46.8138\",\"y1\":\"644.228\",\"x2\":\"104.336\",\"y2\":\"661.701\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":2},[React.createElement(\"stop\",{\"stopColor\":\"#B0FF33\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.494792\",\"stopColor\":\"#55DF20\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#0AC222\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint3\",\"x1\":\"168.209\",\"y1\":\"547.876\",\"x2\":\"244.173\",\"y2\":\"542.446\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":3},[React.createElement(\"stop\",{\"stopColor\":\"#FF8100\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.0001\",\"stopColor\":\"#FF8100\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.5\",\"stopColor\":\"#FF5D00\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#FF3600\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint4\",\"x1\":\"79.7383\",\"y1\":\"271.212\",\"x2\":\"28.396\",\"y2\":\"533.644\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":4},[React.createElement(\"stop\",{\"stopColor\":\"#8700FF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.494792\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#C906F9\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint5\",\"x1\":\"168.5\",\"y1\":\"559\",\"x2\":\"168.5\",\"y2\":\"831\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":5},[React.createElement(\"stop\",{\"offset\":\"0.0260417\",\"stopColor\":\"#009DFF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.213542\",\"stopColor\":\"#0087FF\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.515625\",\"stopColor\":\"#A803FC\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#FF5D00\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint6\",\"x1\":\"181.261\",\"y1\":\"545.238\",\"x2\":\"262.225\",\"y2\":\"526.433\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":6},[React.createElement(\"stop\",{\"stopColor\":\"#009DFF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.401042\",\"stopColor\":\"#0087FF\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.75\",\"stopColor\":\"#0044FF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint7\",\"x1\":\"49\",\"y1\":\"857.961\",\"x2\":\"286.055\",\"y2\":\"857.961\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":7},[React.createElement(\"stop\",{\"offset\":\"0.0242741\",\"stopColor\":\"#FF5D00\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.369792\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.6875\",\"stopColor\":\"#0990E8\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"0.988939\",\"stopColor\":\"#55DF20\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint8\",\"x1\":\"295.054\",\"y1\":\"576.277\",\"x2\":\"179.456\",\"y2\":\"654.767\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":8},[React.createElement(\"stop\",{\"stopColor\":\"#C906F9\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.448312\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.862484\",\"stopColor\":\"#8700FF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-mobile-paint9\",\"x1\":\"109.065\",\"y1\":\"622.079\",\"x2\":\"80.9451\",\"y2\":\"728.07\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":9},[React.createElement(\"stop\",{\"stopColor\":\"#0044FF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.489583\",\"stopColor\":\"#0087FF\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#00CAFF\",\"key\":2})])])]);\n}\n\nIdentifierMobile.defaultProps = {\"viewBox\":\"0 0 328 885\",\"fill\":\"none\"};\n\nmodule.exports = IdentifierMobile;\n\nIdentifierMobile.default = IdentifierMobile;\n","import classNames from 'classnames'\nimport React, { useEffect, useState, useMemo } from 'react'\n\nimport SelectArrow from '../../assets/common/selectArrow.svg'\nimport { encodeFormData } from '../../utils/config'\n\nimport Button from './button'\nimport InputField from './input-field'\nimport Wave from './wave'\n\nenum CommunityFields {\n  email,\n  role,\n  first_name,\n  last_name,\n}\n\ntype EnabledFields = Array<keyof typeof CommunityFields>\n\ninterface CommunityProps {\n  direction?: 'ltr' | 'rtl'\n  title?: string\n  description?: string\n  orangeButton?: boolean\n  enabledFields?: EnabledFields\n  className?: string\n}\n\nconst Community: React.FC<CommunityProps> = (props) => {\n  const {\n    direction = 'rtl',\n    title = 'Join the PayID Community',\n    description = 'Sign up to access the PayID newsletter and hear about hackathons and speaker events',\n    orangeButton = false,\n    enabledFields,\n    className,\n  } = props\n\n  const [validForm, setValidForm] = useState<boolean>(false)\n  const [role, setRole] = useState<string>('DEFAULT')\n  const [firstName, setFirstName] = useState<string>()\n  const [lastName, setLastName] = useState<string>()\n  const [email, setEmail] = useState<string>()\n  const [submitted, setSubmitted] = useState<boolean>(false)\n\n  const enabledFieldsFinal: string[] = useMemo(() => {\n    if (\n      !enabledFields ||\n      !Array.isArray(enabledFields) ||\n      enabledFields.length === 0\n    ) {\n      const allFields = Object.values(CommunityFields)\n      allFields.splice(allFields.length / 2)\n      return allFields.map((v) => (v as string).toLowerCase())\n    }\n    return enabledFields\n  }, [enabledFields])\n\n  const roles = [\n    {\n      label: 'Role',\n      value: 'DEFAULT',\n    },\n    {\n      label: 'Project Manager',\n      value: 'PM',\n    },\n    {\n      label: 'Developer',\n      value: 'Engineer',\n    },\n    {\n      label: 'Business Development',\n      value: 'BD',\n    },\n    {\n      label: 'Sales',\n      value: 'Sales',\n    },\n    {\n      label: 'Operations',\n      value: 'Operations',\n    },\n    {\n      label: 'Executive',\n      value: 'Executive',\n    },\n    {\n      label: 'Marketing',\n      value: 'Marketing',\n    },\n  ]\n\n  const emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  const isValidEmail = (val: string | undefined): boolean => {\n    return !!(val && emailRegex.test(val))\n  }\n\n  useEffect(() => {\n    let valid = true\n    if (enabledFieldsFinal.includes('role') && (!role || role === 'DEFAULT')) {\n      valid = false\n    }\n    if (\n      enabledFieldsFinal.includes('first_name') &&\n      (!firstName || firstName.length <= 0)\n    ) {\n      valid = false\n    }\n    if (\n      enabledFieldsFinal.includes('email') &&\n      (!email || !isValidEmail(email))\n    ) {\n      valid = false\n    }\n    setValidForm(valid)\n  }, [role, firstName, email, enabledFieldsFinal])\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault()\n    if (!validForm) return\n\n    const formData = {\n      role: enabledFieldsFinal.includes('role') ? role : undefined,\n      'first-name': enabledFieldsFinal.includes('first_name')\n        ? firstName\n        : undefined,\n      'last-name':\n        enabledFieldsFinal.includes('last_name') && lastName !== ''\n          ? lastName\n          : undefined,\n      email: enabledFieldsFinal.includes('email') ? email : undefined,\n    }\n\n    if (typeof window !== 'undefined') {\n      if (typeof window.heap !== 'undefined') {\n        window.heap.track('newsletter', formData)\n      }\n      if (typeof window.gtag !== 'undefined') {\n        window.gtag('event', 'conversion', {\n          send_to: 'AW-877332159/jdvuCLLdpdQBEL-NrKID',\n        })\n        window.gtag('event', 'conversion', {\n          send_to: 'AW-616173950/7ehtCOKFvNYBEP6i6KUC',\n        })\n      }\n    }\n\n    const encodedFormData = encodeFormData(formData)\n\n    fetch('https://go.ripple.com/l/105572/2020-06-15/cspx4n', {\n      mode: 'no-cors',\n      method: 'POST',\n      body: encodedFormData,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    }).catch((err) => {\n      Sentry.captureException(err)\n    })\n\n    fetch(\n      `https://script.google.com/macros/s/AKfycbyT7zjGQMQKaSrE9ef1NuvAFGKGUc8cnnUGSFo7V5Q6HWeBx-DL/exec?${encodedFormData}`,\n      {\n        mode: 'no-cors',\n      },\n    ).catch(() => {})\n\n    setSubmitted(true)\n  }\n\n  return (\n    <Wave\n      background=\"orange\"\n      direction={direction}\n      wave=\"blue\"\n      spacing=\"lg\"\n      className=\"flex items-center justify-center\"\n      waveClassNames={className}\n    >\n      {!submitted && (\n        <div>\n          <div className=\"text-3xl font-bold text-center sm:text-5xl\">\n            {title}\n          </div>\n          <div className=\"mt-8 text-xl text-center\">{description}</div>\n          <form onSubmit={handleSubmit} className=\"mt-16 md:mt-30\">\n            {enabledFieldsFinal.includes('role') && (\n              <div className=\"relative px-6 mb-6 border-2 border-white rounded\">\n                <select\n                  defaultValue=\"DEFAULT\"\n                  id=\"role\"\n                  name=\"role\"\n                  onChange={(event) => setRole(event.target.value)}\n                  className=\"w-full py-4 bg-transparent appearance-none focus:outline-none\"\n                >\n                  {roles.map((r) => (\n                    <option\n                      className=\"text-blue-dark-900\"\n                      value={r.value}\n                      key={r.label}\n                      hidden={r.value === 'DEFAULT'}\n                    >\n                      {r.label}\n                    </option>\n                  ))}\n                </select>\n                <SelectArrow className=\"absolute h-2 mt-2 text-white right-4 top-4\" />\n                <label\n                  htmlFor=\"role\"\n                  className={classNames(\n                    'absolute z-10 transition-all duration-300 ease-linear pointer-events-none text-white left-4 bg-orange-500 px-2',\n                    {\n                      '-top-3': role !== 'DEFAULT',\n                      'top-4': role === 'DEFAULT',\n                    },\n                  )}\n                >\n                  Role\n                </label>\n              </div>\n            )}\n            {(enabledFieldsFinal.includes('first_name') ||\n              enabledFieldsFinal.includes('last_name')) && (\n              <div className=\"flex\">\n                {enabledFieldsFinal.includes('first_name') && (\n                  <InputField\n                    theme=\"orange\"\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"first-name\"\n                    autoComplete=\"given-name\"\n                    className=\"mr-3\"\n                    required\n                    requiredText=\"First name is required\"\n                    onChange={(e): void => setFirstName(e.currentTarget.value)}\n                  />\n                )}\n                {enabledFieldsFinal.includes('last_name') && (\n                  <InputField\n                    theme=\"orange\"\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"last-name\"\n                    autoComplete=\"family-name\"\n                    className=\"ml-3\"\n                    onChange={(e): void => setLastName(e.currentTarget.value)}\n                  />\n                )}\n              </div>\n            )}\n            {enabledFieldsFinal.includes('email') && (\n              <InputField\n                theme=\"orange\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                required\n                requiredText=\"Email address is required\"\n                validate={isValidEmail}\n                invalidText=\"Invalid email address\"\n                onChange={(e): void => {\n                  if (isValidEmail(e.currentTarget.value)) {\n                    setEmail(e.currentTarget.value)\n                  } else {\n                    setEmail(undefined)\n                  }\n                }}\n              />\n            )}\n\n            <Button\n              disabled={!validForm}\n              label=\"Submit\"\n              variant=\"secondary\"\n              className=\"mt-8 bg-white sm:hidden\"\n            />\n            <Button\n              disabled={!validForm}\n              variant=\"secondary\"\n              label=\"Submit\"\n              size=\"lg\"\n              className={classNames('hidden mx-auto mt-16 sm:block bg-white', {\n                'text-orange-500': !!orangeButton,\n              })}\n            />\n          </form>\n        </div>\n      )}\n      {submitted && (\n        <div className=\"text-3xl font-bold text-center sm:text-5xl\">\n          Thank you for subscribing!\n        </div>\n      )}\n    </Wave>\n  )\n}\n\nexport default Community\n","var React = require('react');\n\nfunction BetterUx (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"rect\",{\"x\":\"25\",\"width\":\"34\",\"height\":\"34\",\"fill\":\"#A803FC\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M13.7499 55.9997H6.69997C5.45346 55.9997 4.258 55.5045 3.37659 54.6231C2.49517 53.7417 2 52.5462 2 51.2997V34.8498C2 33.6033 2.49517 32.4079 3.37659 31.5265C4.258 30.645 5.45346 30.1499 6.69997 30.1499H13.7499M30.1998 25.4499V16.05C30.1998 14.1802 29.4571 12.387 28.1349 11.0649C26.8128 9.74276 25.0196 9 23.1499 9L13.7499 30.1499V55.9997H40.2578C41.3912 56.0125 42.4911 55.6153 43.3548 54.8811C44.2185 54.147 44.7878 53.1254 44.9577 52.0047L48.2007 30.8549C48.3029 30.1813 48.2575 29.4935 48.0676 28.8392C47.8776 28.1849 47.5476 27.5797 47.1006 27.0655C46.6535 26.5514 46.1 26.1406 45.4784 25.8617C44.8568 25.5827 44.182 25.4422 43.5007 25.4499H30.1998Z\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"key\":1})]);\n}\n\nBetterUx.defaultProps = {\"width\":\"59\",\"height\":\"58\",\"viewBox\":\"0 0 59 58\",\"fill\":\"none\"};\n\nmodule.exports = BetterUx;\n\nBetterUx.default = BetterUx;\n","import classNames from 'classnames'\nimport React from 'react'\n\nimport WaveVectorLTR from '../../assets/WaveLTR.svg'\nimport WaveVectorRTL from '../../assets/WaveRTL.svg'\n\ninterface WaveVectorProps {\n  direction: 'ltr' | 'rtl'\n  wave: 'white' | 'gray' | 'blue' | 'orange' | 'light-blue'\n  className: string\n}\n\nconst WaveVector: React.FC<WaveVectorProps> = (props) => {\n  const classes = classNames('bg-transparent', {\n    'text-white': props.wave === 'white',\n    'text-gray-50': props.wave === 'gray',\n    'text-blue-dark-900': props.wave === 'blue',\n    'text-orange-500': props.wave === 'orange',\n    'text-blue-dark-800': props.wave === 'light-blue',\n  })\n\n  return (\n    <div className={classNames('wave-vector', props.className)}>\n      {props.direction === 'ltr' && <WaveVectorLTR className={classes} />}\n      {props.direction === 'rtl' && <WaveVectorRTL className={classes} />}\n    </div>\n  )\n}\n\nexport default WaveVector\n","import classNames from 'classnames'\nimport React, { CSSProperties } from 'react'\n\nimport WaveVector from './wave-vector'\n\ninterface WaveProps {\n  background?: 'white' | 'gray' | 'blue' | 'orange' | 'light-blue'\n  wave?: 'white' | 'gray' | 'blue' | 'orange' | 'light-blue'\n  direction?: 'ltr' | 'rtl'\n  spacing?: 'sm' | 'md' | 'lg'\n  className?: string\n  waveClassNames?: string\n  style?: CSSProperties\n  'no-gutter'?: boolean\n  'no-spacing'?: boolean\n  waveVectorClassNames?: string\n}\n\nconst Wave: React.FC<WaveProps> = (\n  props: React.PropsWithChildren<WaveProps>,\n) => {\n  // Parse props and set defaults\n  const {\n    wave = 'white',\n    background = 'blue',\n    direction = 'ltr',\n    spacing = 'md',\n  } = props\n\n  let waveVectorClasses = ''\n  if (spacing === 'sm') {\n    waveVectorClasses = 'xl:-mt-20 lg:-mt-18 md:-mt-10 sm:-mt-8'\n  } else if (spacing === 'md') {\n    waveVectorClasses = 'xl:-mt-52 lg:-mt-40 md:-mt-14 sm:-mt-10'\n  } else if (spacing === 'lg') {\n    waveVectorClasses = 'xl:-mt-74 lg:-mt-52 md:-mt-36 sm:-mt-28'\n  }\n  waveVectorClasses = classNames(waveVectorClasses, props.waveVectorClassNames)\n\n  // Figure out the background color and text colors based on given background prop\n  const waveClasses = classNames(props.waveClassNames, 'wave', {\n    'bg-white text-blue-dark-900': background === 'white',\n    'bg-gray-50 text-blue-dark-900': background === 'gray',\n    'bg-blue-dark-900 text-white': background === 'blue',\n    'bg-orange-500 text-white': background === 'orange',\n    'bg-blue-dark-800 text-white': background === 'light-blue',\n  })\n\n  const childrenClass = classNames('flex justify-center', {\n    'px-6 lg:px-18': !props['no-spacing'],\n  })\n\n  const contentClasses = classNames(\n    'wave-content',\n    {\n      'lg:px-17': !props['no-gutter'],\n    },\n    {\n      container: !props['no-spacing'],\n    },\n    {\n      'w-full': props['no-spacing'],\n    },\n    props.className,\n  )\n\n  return (\n    <div className={waveClasses} style={props.style}>\n      <div className={childrenClass}>\n        <div className={contentClasses}>{props.children}</div>\n      </div>\n      <WaveVector\n        wave={wave}\n        direction={direction}\n        className={waveVectorClasses}\n      />\n    </div>\n  )\n}\n\nexport default Wave\n","var React = require('react');\n\nfunction Discord (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M30.1305 37.035C27.6558 37.035 25.7021 39.2084 25.7021 41.8599C25.7021 44.5114 27.6992 46.6847 30.1305 46.6847C32.6051 46.6847 34.5588 44.5114 34.5588 41.8599C34.6022 39.2084 32.6051 37.035 30.1305 37.035ZM45.9769 37.035C43.5022 37.035 41.5486 39.2084 41.5486 41.8599C41.5486 44.5114 43.5456 46.6847 45.9769 46.6847C48.4515 46.6847 50.4052 44.5114 50.4052 41.8599C50.4052 39.2084 48.4515 37.035 45.9769 37.035Z\",\"fill\":\"white\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M67.0759 0.566406H8.90004C3.99416 0.566406 0 4.56537 0 9.52061V68.288C0 73.2432 3.99416 77.2422 8.90004 77.2422H58.1325L55.8315 69.2008L61.3886 74.3734L66.6418 79.2417L75.976 87.5004V9.52061C75.976 4.56537 71.9818 0.566406 67.0759 0.566406ZM50.3178 57.3343C50.3178 57.3343 48.7549 55.4652 47.4524 53.8135C53.1398 52.2052 55.3105 48.6409 55.3105 48.6409C53.5305 49.8145 51.8373 50.6404 50.3178 51.2055C48.147 52.1183 46.0631 52.7268 44.0226 53.0746C39.8548 53.857 36.0343 53.6396 32.7782 53.0311C30.3036 52.5529 28.1762 51.8575 26.3962 51.162C25.3977 50.7708 24.3123 50.2927 23.2269 49.6841C23.0967 49.5972 22.9664 49.5537 22.8362 49.4668C22.7494 49.4233 22.706 49.3799 22.6625 49.3364C21.8811 48.9017 21.4469 48.5974 21.4469 48.5974C21.4469 48.5974 23.5308 52.0748 29.0445 53.7266C27.7421 55.3783 26.1357 57.3343 26.1357 57.3343C16.541 57.03 12.8942 50.7273 12.8942 50.7273C12.8942 36.731 19.1459 25.3861 19.1459 25.3861C25.3977 20.6916 31.3455 20.822 31.3455 20.822L31.7797 21.3436C23.965 23.6039 20.3616 27.0378 20.3616 27.0378C20.3616 27.0378 21.3167 26.5162 22.923 25.7773C27.5684 23.7343 31.2587 23.1692 32.7782 23.0388C33.0387 22.9954 33.2558 22.9519 33.5162 22.9519C36.1646 22.6042 39.1602 22.5172 42.286 22.865C46.4104 23.3431 50.8388 24.5602 55.3539 27.0378C55.3539 27.0378 51.9241 23.7778 44.5436 21.5175L45.1514 20.822C45.1514 20.822 51.0993 20.6916 57.351 25.3861C57.351 25.3861 63.6027 36.731 63.6027 50.7273C63.6027 50.7273 59.9125 57.03 50.3178 57.3343Z\",\"fill\":\"white\",\"key\":1})]);\n}\n\nDiscord.defaultProps = {\"width\":\"76\",\"height\":\"88\",\"viewBox\":\"0 0 76 88\",\"fill\":\"none\"};\n\nmodule.exports = Discord;\n\nDiscord.default = Discord;\n","var React = require('react');\n\nfunction WaveLTR (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M119.603 106.85C27.6811 82.8743 3.1337 32.6632 0 0V230H375C375 98.0089 247.198 128.693 151.462 113.105C143.158 111.753 128.221 109.098 119.603 106.85Z\",\"fill\":\"currentColor\"}));\n}\n\nWaveLTR.defaultProps = {\"viewBox\":\"0 0 375 230\",\"fill\":\"none\"};\n\nmodule.exports = WaveLTR;\n\nWaveLTR.default = WaveLTR;\n","var React = require('react');\n\nfunction Identifier (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M379 329.654C387.06 330.965 395.218 331.571 403.383 331.468C425.638 331.323 447.531 325.813 467.205 315.405C479.612 308.786 490.92 300.284 500.726 290.201L548.346 241.375C555.668 233.852 564.401 227.847 574.045 223.703C583.688 219.558 594.054 217.356 604.549 217.221C615.044 217.086 625.463 219.022 635.21 222.917C644.957 226.813 653.841 232.592 661.354 239.924L613.212 192.94C602.944 182.955 594.314 171.413 587.64 158.74C556.485 162.756 527.608 177.21 505.715 199.745L379 329.654Z\",\"fill\":\"url(#home-id-paint0)\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M508.789 397.707L638.638 524.424C643.59 493.981 638.467 462.753 624.046 435.492C617.477 423.348 609.104 412.271 599.213 402.641L550.418 355.019C542.76 347.728 536.625 338.989 532.369 329.308C528.113 319.628 525.819 309.199 525.622 298.625C525.425 288.051 527.329 277.544 531.221 267.711C535.114 257.879 540.92 248.917 548.3 241.346L500.724 290.144C490.919 300.226 479.611 308.729 467.203 315.348C471.285 346.737 485.956 375.793 508.789 397.707Z\",\"fill\":\"url(#home-id-paint1)\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M95 69.3705C147.924 52.7972 269.108 15.3271 442.314 153.678C615.519 292.03 623.548 298.515 688.5 305\",\"stroke\":\"url(#home-id-paint2)\",\"strokeWidth\":\"4\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M234 195.529C280.333 187.478 528.5 273.974 535 276.321C541.5 278.668 697 320.524 761 298.735\",\"stroke\":\"url(#home-id-paint3)\",\"strokeWidth\":\"4\",\"key\":3}),React.createElement(\"path\",{\"d\":\"M865 305H691\",\"stroke\":\"url(#home-id-paint4)\",\"strokeWidth\":\"4\",\"key\":4}),React.createElement(\"path\",{\"d\":\"M234 358.743C280.333 362.756 535 318.471 535 318.471C535 318.471 696 296.116 760 306.976\",\"stroke\":\"url(#home-id-paint5)\",\"strokeWidth\":\"4\",\"key\":5}),React.createElement(\"path\",{\"d\":\"M95 504.271C147.879 518.324 268.961 550.096 442.021 432.783C615.08 315.471 622.103 309.499 687 304\",\"stroke\":\"url(#home-id-paint6)\",\"strokeWidth\":\"4\",\"key\":6}),React.createElement(\"path\",{\"d\":\"M663.631 352.101L710.352 304.217C720.159 294.134 731.467 285.627 743.873 278.999C739.881 248.245 725.717 219.712 703.636 197.945L573.773 71.2283C572.455 79.29 571.848 87.4519 571.959 95.6198C572.099 117.621 577.474 139.272 587.639 158.782C594.314 171.456 602.944 182.998 613.212 192.983L661.354 239.967C676.37 254.618 685.025 274.588 685.451 295.567C685.877 316.546 678.04 336.852 663.631 352.101Z\",\"fill\":\"url(#home-id-paint7)\",\"key\":7}),React.createElement(\"rect\",{\"y\":\"279\",\"width\":\"250.617\",\"height\":\"146.495\",\"rx\":\"8\",\"fill\":\"#8602CA\",\"key\":8}),React.createElement(\"rect\",{\"x\":\"185.149\",\"y\":\"292.948\",\"width\":\"46.0318\",\"height\":\"14.9485\",\"rx\":\"3\",\"fill\":\"#DC9AFE\",\"key\":9}),React.createElement(\"rect\",{\"x\":\"19\",\"y\":\"326.832\",\"width\":\"46.0318\",\"height\":\"29.8969\",\"rx\":\"3\",\"fill\":\"#DC9AFE\",\"key\":10}),React.createElement(\"path\",{\"d\":\"M22.017 407.612L22.8807 404.958L27.0795 404.958L27.9432 407.612L30.5795 407.612L26.5682 395.975L23.3977 395.975L19.3807 407.612L22.017 407.612ZM23.5057 403.038L24.9375 398.634L25.0284 398.634L26.4602 403.038L23.5057 403.038ZM34.3551 395.975L31.9347 395.975L31.9347 407.612L34.3551 407.612L34.3551 395.975ZM36.294 407.612L38.7145 407.612L38.7145 398.884L36.294 398.884L36.294 407.612ZM37.5099 397.759C38.2315 397.759 38.8224 397.208 38.8224 396.532C38.8224 395.862 38.2315 395.31 37.5099 395.31C36.794 395.31 36.2031 395.862 36.2031 396.532C36.2031 397.208 36.794 397.759 37.5099 397.759ZM44.5966 407.782C46.9205 407.782 48.3807 406.418 48.4943 404.413L46.2102 404.413C46.0682 405.345 45.4545 405.867 44.625 405.867C43.4943 405.867 42.7614 404.918 42.7614 403.248C42.7614 401.6 43.5 400.657 44.625 400.657C45.5114 400.657 46.0795 401.242 46.2102 402.112L48.4943 402.112C48.392 400.095 46.8636 398.771 44.5852 398.771C41.9375 398.771 40.3011 400.606 40.3011 403.282C40.3011 405.935 41.9091 407.782 44.5966 407.782ZM54.0213 407.782C56.1804 407.782 57.6349 406.731 57.9759 405.112L55.7372 404.964C55.4929 405.629 54.8679 405.975 54.0611 405.975C52.8508 405.975 52.0838 405.174 52.0838 403.873L52.0838 403.867L58.027 403.867L58.027 403.202C58.027 400.237 56.2315 398.771 53.9247 398.771C51.3565 398.771 49.6918 400.595 49.6918 403.288C49.6918 406.055 51.3338 407.782 54.0213 407.782ZM52.0838 402.367C52.1349 401.373 52.8906 400.577 53.9645 400.577C55.0156 400.577 55.7429 401.327 55.7486 402.367L52.0838 402.367Z\",\"fill\":\"white\",\"key\":11}),React.createElement(\"path\",{\"d\":\"M25.0057 368.072L22.6932 368.072L19.8125 369.896L19.8125 372.077L22.4773 370.407L22.5455 370.407L22.5455 379.708L25.0057 379.708L25.0057 368.072ZM27.7713 379.708L36.0668 379.708L36.0668 377.697L31.1804 377.697L31.1804 377.617L32.8793 375.952C35.2713 373.771 35.9134 372.68 35.9134 371.356C35.9134 369.339 34.2656 367.913 31.7713 367.913C29.3281 367.913 27.652 369.373 27.6577 371.657L29.9929 371.657C29.9872 370.543 30.6918 369.861 31.7543 369.861C32.777 369.861 33.5384 370.498 33.5384 371.521C33.5384 372.447 32.9702 373.083 31.9134 374.1L27.7713 377.935L27.7713 379.708ZM42.1506 379.867C44.7642 379.867 46.6335 378.43 46.6278 376.441C46.6335 374.992 45.7131 373.958 44.0028 373.742L44.0028 373.651C45.304 373.418 46.2017 372.498 46.196 371.191C46.2017 369.356 44.5937 367.913 42.1847 367.913C39.7983 367.913 38.0028 369.31 37.9687 371.322L40.3267 371.322C40.3551 370.435 41.1676 369.861 42.1733 369.861C43.1676 369.861 43.8324 370.464 43.8267 371.339C43.8324 372.253 43.054 372.873 41.9347 372.873L40.8494 372.873L40.8494 374.68L41.9347 374.68C43.2528 374.68 44.0767 375.339 44.071 376.276C44.0767 377.202 43.2812 377.839 42.1562 377.839C41.071 377.839 40.2585 377.271 40.2131 376.418L37.7358 376.418C37.7756 378.452 39.5937 379.867 42.1506 379.867ZM48.2202 377.663L53.8054 377.663L53.8054 379.708L56.1577 379.708L56.1577 377.663L57.6009 377.663L57.6009 375.691L56.1577 375.691L56.1577 368.072L53.0781 368.072L48.2202 375.725L48.2202 377.663ZM53.8509 375.691L50.6974 375.691L50.6974 375.6L53.7599 370.753L53.8509 370.753L53.8509 375.691ZM74.5994 379.867C77.1903 379.867 78.9517 378.18 78.946 375.827C78.9517 373.6 77.3949 371.998 75.2983 371.998C74.2756 371.998 73.3949 372.424 72.9858 372.998L72.9176 372.998L73.2187 370.083L78.304 370.083L78.304 368.072L71.1903 368.072L70.6392 374.208L72.8267 374.6C73.1847 374.117 73.8778 373.816 74.5653 373.816C75.7358 373.822 76.5767 374.668 76.5767 375.89C76.5767 377.1 75.7528 377.935 74.5994 377.935C73.6222 377.935 72.8324 377.322 72.7756 376.418L70.3892 376.418C70.4347 378.43 72.1903 379.867 74.5994 379.867ZM85.1278 379.867C87.7187 379.878 89.4858 378.18 89.4801 375.81C89.4858 373.628 87.9631 372.055 85.9006 372.055C84.6222 372.055 83.4915 372.668 82.9687 373.697L82.8892 373.697C82.9006 371.396 83.696 369.986 85.2131 369.986C86.1051 369.986 86.7472 370.469 86.9347 371.322L89.3608 371.322C89.1278 369.367 87.5369 367.878 85.2131 367.878C82.3381 367.878 80.4915 370.208 80.4801 374.151C80.4915 378.413 82.7358 379.856 85.1278 379.867ZM85.1165 377.935C83.9801 377.935 83.1392 377.021 83.1392 375.884C83.1449 374.753 84.0028 373.833 85.1335 373.833C86.2699 373.833 87.0994 374.725 87.0937 375.878C87.0994 377.043 86.2528 377.935 85.1165 377.935ZM96.2869 368.072L93.9744 368.072L91.0937 369.896L91.0937 372.077L93.7585 370.407L93.8267 370.407L93.8267 379.708L96.2869 379.708L96.2869 368.072ZM103.393 379.867C106.018 379.867 107.905 378.464 107.911 376.577C107.905 375.123 106.786 373.935 105.388 373.702L105.388 373.623C106.604 373.373 107.473 372.322 107.479 371.043C107.473 369.242 105.746 367.913 103.393 367.913C101.036 367.913 99.3082 369.242 99.3139 371.043C99.3082 372.316 100.166 373.373 101.405 373.623L101.405 373.702C99.9844 373.935 98.8764 375.123 98.8821 376.577C98.8764 378.464 100.768 379.867 103.393 379.867ZM103.393 378.06C102.223 378.06 101.439 377.367 101.439 376.384C101.439 375.378 102.263 374.651 103.393 374.651C104.518 374.651 105.348 375.378 105.348 376.384C105.348 377.373 104.558 378.06 103.393 378.06ZM103.393 372.861C102.411 372.861 101.712 372.219 101.712 371.299C101.712 370.39 102.399 369.765 103.393 369.765C104.382 369.765 105.075 370.396 105.075 371.299C105.075 372.219 104.371 372.861 103.393 372.861ZM120.74 379.708L129.036 379.708L129.036 377.697L124.149 377.697L124.149 377.617L125.848 375.952C128.24 373.771 128.882 372.68 128.882 371.356C128.882 369.339 127.234 367.913 124.74 367.913C122.297 367.913 120.621 369.373 120.626 371.657L122.962 371.657C122.956 370.543 123.661 369.861 124.723 369.861C125.746 369.861 126.507 370.498 126.507 371.521C126.507 372.447 125.939 373.083 124.882 374.1L120.74 377.935L120.74 379.708ZM135.119 379.867C137.733 379.867 139.602 378.43 139.597 376.441C139.602 374.992 138.682 373.958 136.972 373.742L136.972 373.651C138.273 373.418 139.17 372.498 139.165 371.191C139.17 369.356 137.562 367.913 135.153 367.913C132.767 367.913 130.972 369.31 130.937 371.322L133.295 371.322C133.324 370.435 134.136 369.861 135.142 369.861C136.136 369.861 136.801 370.464 136.795 371.339C136.801 372.253 136.023 372.873 134.903 372.873L133.818 372.873L133.818 374.68L134.903 374.68C136.222 374.68 137.045 375.339 137.04 376.276C137.045 377.202 136.25 377.839 135.125 377.839C134.04 377.839 133.227 377.271 133.182 376.418L130.705 376.418C130.744 378.452 132.562 379.867 135.119 379.867ZM145.575 367.878C142.973 367.867 141.217 369.572 141.229 371.935C141.217 374.117 142.74 375.691 144.803 375.691C146.081 375.691 147.217 375.072 147.734 374.049L147.814 374.049C147.808 376.356 147.007 377.759 145.49 377.759C144.598 377.759 143.956 377.271 143.768 376.424L141.342 376.424C141.57 378.384 143.161 379.867 145.49 379.867C148.371 379.867 150.217 377.538 150.223 373.589C150.217 369.333 147.967 367.884 145.575 367.878ZM145.592 369.81C146.723 369.81 147.558 370.731 147.57 371.856C147.558 372.986 146.695 373.907 145.57 373.907C144.433 373.907 143.604 373.021 143.615 371.867C143.604 370.702 144.45 369.81 145.592 369.81ZM156.99 368.072L154.678 368.072L151.797 369.896L151.797 372.077L154.462 370.407L154.53 370.407L154.53 379.708L156.99 379.708L156.99 368.072ZM175.428 379.964C178.354 379.964 180.121 377.736 180.126 373.901C180.132 370.094 178.342 367.913 175.428 367.913C172.507 367.913 170.734 370.089 170.729 373.901C170.717 377.725 172.496 379.958 175.428 379.964ZM175.428 377.924C174.092 377.924 173.229 376.583 173.234 373.901C173.24 371.259 174.098 369.93 175.428 369.93C176.751 369.93 177.615 371.259 177.615 373.901C177.621 376.583 176.757 377.924 175.428 377.924ZM186.443 379.964C189.369 379.964 191.136 377.736 191.142 373.901C191.148 370.094 189.358 367.913 186.443 367.913C183.523 367.913 181.75 370.089 181.744 373.901C181.733 377.725 183.511 379.958 186.443 379.964ZM186.443 377.924C185.108 377.924 184.244 376.583 184.25 373.901C184.256 371.259 185.114 369.93 186.443 369.93C187.767 369.93 188.631 371.259 188.631 373.901C188.636 376.583 187.773 377.924 186.443 377.924ZM197.959 368.072L195.646 368.072L192.766 369.896L192.766 372.077L195.43 370.407L195.499 370.407L195.499 379.708L197.959 379.708L197.959 368.072ZM205.787 368.072L203.474 368.072L200.594 369.896L200.594 372.077L203.259 370.407L203.327 370.407L203.327 379.708L205.787 379.708L205.787 368.072Z\",\"fill\":\"white\",\"key\":12}),React.createElement(\"path\",{\"d\":\"M206.547 408.317L203.097 408.317L205.253 394.839L208.704 394.839L206.547 408.317ZM200.195 394.839L196.906 404.109L196.517 402.113L196.517 402.114L195.356 396.052C195.356 396.052 195.216 394.839 193.72 394.839L188.283 394.839L188.219 395.067C188.219 395.067 189.882 395.419 191.828 396.608L194.825 408.318L198.419 408.318L203.908 394.839L200.195 394.839ZM227.33 408.317L230.497 408.317L227.736 394.838L224.962 394.838C223.682 394.838 223.37 395.843 223.37 395.843L218.225 408.317L221.821 408.317L222.54 406.315L226.926 406.315L227.33 408.317ZM223.534 403.549L225.346 398.505L226.366 403.549L223.534 403.549ZM218.494 398.08L218.987 395.186C218.987 395.186 217.468 394.598 215.884 394.598C214.172 394.598 210.106 395.359 210.106 399.06C210.106 402.542 214.878 402.585 214.878 404.414C214.878 406.243 210.598 405.916 209.186 404.762L208.673 407.789C208.673 407.789 210.213 408.55 212.567 408.55C214.921 408.55 218.472 407.31 218.472 403.935C218.472 400.431 213.658 400.104 213.658 398.581C213.658 397.057 217.018 397.253 218.494 398.08Z\",\"fill\":\"white\",\"key\":13}),React.createElement(\"path\",{\"d\":\"M196.517 402.114L195.356 396.053C195.356 396.053 195.216 394.839 193.72 394.839L188.283 394.839L188.219 395.068C188.219 395.068 190.832 395.618 193.339 397.683C195.736 399.655 196.517 402.114 196.517 402.114Z\",\"fill\":\"#FED74C\",\"key\":14}),React.createElement(\"rect\",{\"x\":\"1\",\"width\":\"274.145\",\"height\":\"112.612\",\"rx\":\"8\",\"fill\":\"#44B21A\",\"key\":15}),React.createElement(\"rect\",{\"x\":\"19.4131\",\"y\":\"46.8384\",\"width\":\"171.852\",\"height\":\"14.9485\",\"rx\":\"3\",\"fill\":\"#99EC79\",\"key\":16}),React.createElement(\"path\",{\"d\":\"M29.1349 80.1058L26.6861 80.1058L26.6861 87.424L26.5838 87.424L21.5611 80.1058L19.402 80.1058L19.402 91.7422L21.8622 91.7422L21.8622 84.4183L21.9474 84.4183L27.0099 91.7422L29.1349 91.7422L29.1349 80.1058ZM31.1676 91.7422L38.6165 91.7422L38.6165 89.7138L33.6278 89.7138L33.6278 80.1058L31.1676 80.1058L31.1676 91.7422ZM48.0909 79.9126C45.4886 79.9013 43.733 81.6058 43.7443 83.9695C43.733 86.1513 45.2557 87.7251 47.3182 87.7251C48.5966 87.7251 49.733 87.1058 50.25 86.0831L50.3295 86.0831C50.3239 88.3899 49.5227 89.7933 48.0057 89.7933C47.1136 89.7933 46.4716 89.3047 46.2841 88.4581L43.858 88.4581C44.0852 90.4183 45.6761 91.9013 48.0057 91.9013C50.8864 91.9013 52.733 89.5717 52.7386 85.6229C52.733 81.3672 50.483 79.9183 48.0909 79.9126ZM48.108 81.8445C49.2386 81.8445 50.0739 82.7649 50.0852 83.8899C50.0739 85.0206 49.2102 85.9411 48.0852 85.9411C46.9489 85.9411 46.1193 85.0547 46.1307 83.9013C46.1193 82.7365 46.9659 81.8445 48.108 81.8445ZM59.5057 80.1058L57.1932 80.1058L54.3125 81.9297L54.3125 84.1115L56.9773 82.4411L57.0455 82.4411L57.0455 91.7422L59.5057 91.7422L59.5057 80.1058ZM68.0483 91.7422L68.9119 89.0888L73.1108 89.0888L73.9744 91.7422L76.6108 91.7422L72.5994 80.1058L69.429 80.1058L65.4119 91.7422L68.0483 91.7422ZM69.5369 87.1683L70.9687 82.7649L71.0597 82.7649L72.4915 87.1683L69.5369 87.1683ZM78.0114 91.7422L82.983 91.7422C85.5966 91.7422 86.9886 90.3786 86.9886 88.5263C86.9886 86.8047 85.7557 85.7649 84.4318 85.7024L84.4318 85.5888C85.642 85.3161 86.5341 84.4581 86.5341 83.0888C86.5341 81.3445 85.2386 80.1058 82.6705 80.1058L78.0114 80.1058L78.0114 91.7422ZM80.4716 89.7308L80.4716 86.6399L82.5341 86.6399C83.7159 86.6399 84.4489 87.3217 84.4489 88.282C84.4489 89.157 83.8523 89.7308 82.4773 89.7308L80.4716 89.7308ZM80.4716 84.9752L80.4716 82.0945L82.3409 82.0945C83.4318 82.0945 84.0511 82.657 84.0511 83.4979C84.0511 84.4183 83.3011 84.9752 82.2955 84.9752L80.4716 84.9752ZM98.3224 80.1058L95.8736 80.1058L95.8736 87.424L95.7713 87.424L90.7486 80.1058L88.5895 80.1058L88.5895 91.7422L91.0497 91.7422L91.0497 84.4183L91.1349 84.4183L96.1974 91.7422L98.3224 91.7422L98.3224 80.1058ZM102.361 91.7422L103.224 89.0888L107.423 89.0888L108.287 91.7422L110.923 91.7422L106.912 80.1058L103.741 80.1058L99.7244 91.7422L102.361 91.7422ZM103.849 87.1683L105.281 82.7649L105.372 82.7649L106.804 87.1683L103.849 87.1683ZM116.818 91.9979C119.744 91.9979 121.511 89.7706 121.517 85.9354C121.523 82.1286 119.733 79.9467 116.818 79.9467C113.898 79.9467 112.125 82.1229 112.119 85.9354C112.108 89.7592 113.886 91.9922 116.818 91.9979ZM116.818 89.9581C115.483 89.9581 114.619 88.6172 114.625 85.9354C114.631 83.2933 115.489 81.9638 116.818 81.9638C118.142 81.9638 119.006 83.2933 119.006 85.9354C119.011 88.6172 118.148 89.9581 116.818 89.9581ZM123.095 89.6968L128.68 89.6968L128.68 91.7422L131.033 91.7422L131.033 89.6968L132.476 89.6968L132.476 87.7252L131.033 87.7252L131.033 80.1058L127.953 80.1058L123.095 87.7593L123.095 89.6968ZM128.726 87.7252L125.572 87.7252L125.572 87.6343L128.635 82.7877L128.726 82.7877L128.726 87.7252ZM139.021 80.1058L136.709 80.1058L133.828 81.9297L133.828 84.1115L136.493 82.4411L136.561 82.4411L136.561 91.7422L139.021 91.7422L139.021 80.1058ZM142.247 91.7422L144.787 91.7422L149.616 82.1456L149.616 80.1058L141.452 80.1058L141.452 82.1172L147.071 82.1172L147.071 82.1968L142.247 91.7422ZM156.365 80.1058L154.053 80.1058L151.172 81.9297L151.172 84.1115L153.837 82.4411L153.905 82.4411L153.905 91.7422L156.365 91.7422L156.365 80.1058ZM163.597 91.9013C166.187 91.9127 167.955 90.2138 167.949 87.8445C167.955 85.6627 166.432 84.0888 164.369 84.0888C163.091 84.0888 161.96 84.7024 161.437 85.7308L161.358 85.7308C161.369 83.4297 162.165 82.0206 163.682 82.0206C164.574 82.0206 165.216 82.5036 165.403 83.3558L167.83 83.3558C167.597 81.4013 166.006 79.9127 163.682 79.9127C160.807 79.9127 158.96 82.2422 158.949 86.1854C158.96 90.4468 161.205 91.8899 163.597 91.9013ZM163.585 89.9695C162.449 89.9695 161.608 89.0547 161.608 87.9183C161.614 86.7877 162.472 85.8672 163.602 85.8672C164.739 85.8672 165.568 86.7593 165.562 87.9127C165.568 89.0774 164.722 89.9695 163.585 89.9695ZM169.517 89.6968L175.102 89.6968L175.102 91.7422L177.455 91.7422L177.455 89.6968L178.898 89.6968L178.898 87.7252L177.455 87.7252L177.455 80.1059L174.375 80.1059L169.517 87.7593L169.517 89.6968ZM175.148 87.7252L171.994 87.7252L171.994 87.6343L175.057 82.7877L175.148 82.7877L175.148 87.7252ZM184.838 91.9013C187.452 91.9013 189.321 90.4638 189.315 88.4752C189.321 87.0263 188.401 85.9922 186.69 85.7763L186.69 85.6854C187.991 85.4524 188.889 84.532 188.884 83.2252C188.889 81.3899 187.281 79.9468 184.872 79.9468C182.486 79.9468 180.69 81.3445 180.656 83.3559L183.014 83.3559C183.043 82.4695 183.855 81.8956 184.861 81.8956C185.855 81.8956 186.52 82.4979 186.514 83.3729C186.52 84.2877 185.741 84.907 184.622 84.907L183.537 84.907L183.537 86.7138L184.622 86.7138C185.94 86.7138 186.764 87.3729 186.759 88.3104C186.764 89.2365 185.969 89.8729 184.844 89.8729C183.759 89.8729 182.946 89.3047 182.901 88.4524L180.423 88.4524C180.463 90.4865 182.281 91.9013 184.838 91.9013ZM195.646 91.9979C198.572 91.9979 200.339 89.7706 200.345 85.9354C200.351 82.1286 198.561 79.9468 195.646 79.9468C192.726 79.9468 190.953 82.1229 190.947 85.9354C190.936 89.7593 192.714 91.9922 195.646 91.9979ZM195.646 89.9581C194.311 89.9581 193.447 88.6172 193.453 85.9354C193.459 83.2934 194.317 81.9638 195.646 81.9638C196.97 81.9638 197.834 83.2934 197.834 85.9354C197.839 88.6172 196.976 89.9581 195.646 89.9581ZM206.662 91.9979C209.588 91.9979 211.355 89.7706 211.361 85.9354C211.366 82.1286 209.577 79.9468 206.662 79.9468C203.741 79.9468 201.969 82.1229 201.963 85.9354C201.952 89.7593 203.73 91.9922 206.662 91.9979ZM206.662 89.9581C205.327 89.9581 204.463 88.6172 204.469 85.9354C204.474 83.2934 205.332 81.9638 206.662 81.9638C207.986 81.9638 208.849 83.2934 208.849 85.9354C208.855 88.6172 207.991 89.9581 206.662 89.9581Z\",\"fill\":\"white\",\"key\":17}),React.createElement(\"path\",{\"d\":\"M26.63 22.7255L29.2827 22.7255C29.2443 20.3924 27.3267 18.7816 24.4119 18.7816C21.5419 18.7816 19.4389 20.3669 19.4517 22.7447C19.4453 24.6751 20.8068 25.7809 23.0185 26.3115L24.4439 26.6694C25.8693 27.0146 26.6619 27.4237 26.6683 28.3058C26.6619 29.2646 25.7543 29.9166 24.348 29.9166C22.9098 29.9166 21.8743 29.2518 21.7848 27.9414L19.1065 27.9414C19.1768 30.7731 21.2031 32.2369 24.38 32.2369C27.576 32.2369 29.4553 30.7092 29.4616 28.3122C29.4553 26.1325 27.8125 24.9755 25.5369 24.4642L24.3608 24.1829C23.223 23.9208 22.2706 23.499 22.2898 22.5593C22.2898 21.7156 23.0376 21.0955 24.3928 21.0955C25.7159 21.0955 26.5277 21.6964 26.63 22.7255ZM31.3233 32.0515L40.1699 32.0515L40.1699 29.7696L34.0911 29.7696L34.0911 26.6438L39.6905 26.6438L39.6905 24.3619L34.0911 24.3619L34.0911 21.2426L40.1444 21.2426L40.1444 18.9606L31.3233 18.9606L31.3233 32.0515ZM42.3448 32.0515L45.1126 32.0515L45.1126 27.8072L47.4393 27.8072C50.4499 27.8072 52.2013 26.011 52.2013 23.3967C52.2013 20.7951 50.4819 18.9606 47.5096 18.9606L42.3448 18.9606L42.3448 32.0515ZM45.1126 25.5892L45.1126 21.2234L46.979 21.2234C48.5771 21.2234 49.3505 22.0927 49.3505 23.3967C49.3505 24.6943 48.5771 25.5892 46.9918 25.5892L45.1126 25.5892ZM54.7438 32.0515L55.7154 29.0664L60.4391 29.0664L61.4107 32.0515L64.3766 32.0515L59.8638 18.9606L56.2971 18.9606L51.7779 32.0515L54.7438 32.0515ZM56.4185 26.9059L58.0293 21.9521L58.1316 21.9521L59.7424 26.9059L56.4185 26.9059Z\",\"fill\":\"white\",\"key\":18}),React.createElement(\"path\",{\"d\":\"M624.048 435.549C654.991 431.436 683.65 417.023 705.407 394.631L832.079 264.75C824.015 263.428 815.851 262.816 807.681 262.922C785.426 263.056 763.532 268.561 743.859 278.97C731.453 285.598 720.146 294.105 710.338 304.189L663.618 352.072C663.342 352.377 663.037 352.682 662.733 353.001C648.048 368.064 628.019 376.727 606.99 377.11C585.961 377.493 565.629 369.565 550.406 355.047L599.201 402.669C609.1 412.307 617.478 423.394 624.048 435.549Z\",\"fill\":\"url(#home-id-paint8)\",\"key\":19}),React.createElement(\"rect\",{\"x\":\"858\",\"y\":\"267\",\"width\":\"320\",\"height\":\"70.9999\",\"rx\":\"8.1354\",\"fill\":\"white\",\"key\":20}),React.createElement(\"path\",{\"d\":\"M881.523 313.309C883.941 313.309 885.508 312.254 886.307 310.731L886.434 310.731L886.434 313L890.738 313L890.738 301.963C890.738 298.064 887.436 296.423 883.792 296.423C879.872 296.423 877.294 298.298 876.665 301.281L880.863 301.622C881.172 300.536 882.141 299.737 883.771 299.737C885.316 299.737 886.2 300.514 886.2 301.857L886.2 301.92C886.2 302.975 885.081 303.114 882.237 303.391C878.998 303.689 876.09 304.776 876.09 308.43C876.09 311.668 878.402 313.309 881.523 313.309ZM882.823 310.177C881.427 310.177 880.426 309.527 880.426 308.281C880.426 307.002 881.481 306.374 883.079 306.15C884.069 306.011 885.689 305.777 886.232 305.415L886.232 307.151C886.232 308.866 884.815 310.177 882.823 310.177ZM898.798 291.182L894.259 291.182L894.259 313L898.798 313L898.798 291.182ZM902.433 313L906.971 313L906.971 296.636L902.433 296.636L902.433 313ZM904.713 294.527C906.066 294.527 907.174 293.494 907.174 292.226C907.174 290.969 906.066 289.935 904.713 289.935C903.371 289.935 902.263 290.969 902.263 292.226C902.263 293.494 903.371 294.527 904.713 294.527ZM918 313.32C922.358 313.32 925.096 310.763 925.309 307.002L921.026 307.002C920.76 308.749 919.609 309.729 918.054 309.729C915.934 309.729 914.559 307.95 914.559 304.818C914.559 301.729 915.944 299.96 918.054 299.96C919.716 299.96 920.781 301.058 921.026 302.688L925.309 302.688C925.117 298.906 922.251 296.423 917.979 296.423C913.015 296.423 909.946 299.864 909.946 304.882C909.946 309.857 912.961 313.32 918 313.32ZM935.672 313.32C939.72 313.32 942.447 311.349 943.087 308.313L938.889 308.036C938.431 309.282 937.259 309.932 935.746 309.932C933.477 309.932 932.039 308.43 932.039 305.99L932.039 305.979L943.182 305.979L943.182 304.733C943.182 299.172 939.816 296.423 935.491 296.423C930.675 296.423 927.554 299.843 927.554 304.893C927.554 310.081 930.633 313.32 935.672 313.32ZM932.039 303.167C932.135 301.303 933.552 299.811 935.565 299.811C937.536 299.811 938.9 301.217 938.91 303.167L932.039 303.167ZM952.952 315.727L955.466 315.727L955.487 313.266C960.1 312.915 962.774 310.465 962.785 306.768C962.774 303.135 960.036 301.207 956.244 300.354L955.615 300.205L955.658 294.879C957.074 295.209 957.937 296.114 958.065 297.457L962.486 297.457C962.433 293.93 959.802 291.406 955.7 290.958L955.722 288.455L953.207 288.455L953.186 290.937C949.021 291.342 946.08 293.856 946.101 297.489C946.091 300.706 948.36 302.549 952.046 303.433L953.069 303.689L953.016 309.325C951.279 308.994 950.107 307.929 949.99 306.15L945.526 306.15C945.633 310.454 948.456 312.862 952.973 313.256L952.952 315.727ZM955.53 309.325L955.572 304.349C957.224 304.871 958.119 305.543 958.129 306.757C958.119 308.046 957.138 309.005 955.53 309.325ZM953.101 299.555C951.769 299.097 950.81 298.405 950.832 297.18C950.832 296.04 951.641 295.156 953.143 294.847L953.101 299.555ZM973.26 313.32C977.308 313.32 980.035 311.349 980.674 308.313L976.477 308.036C976.019 309.282 974.847 309.932 973.334 309.932C971.065 309.932 969.627 308.43 969.627 305.99L969.627 305.979L980.77 305.979L980.77 304.733C980.77 299.172 977.404 296.423 973.079 296.423C968.263 296.423 965.142 299.843 965.142 304.893C965.142 310.081 968.221 313.32 973.26 313.32ZM969.627 303.167C969.723 301.303 971.14 299.811 973.153 299.811C975.124 299.811 976.488 301.217 976.498 303.167L969.627 303.167ZM987.261 296.636L982.573 296.636L987.261 304.818L982.403 313L987.09 313L990.265 307.343L993.493 313L998.127 313L993.259 304.818L998 296.636L993.344 296.636L990.265 302.357L987.261 296.636ZM1005.27 313.309C1007.69 313.309 1009.26 312.254 1010.06 310.731L1010.18 310.731L1010.18 313L1014.49 313L1014.49 301.963C1014.49 298.064 1011.19 296.423 1007.54 296.423C1003.62 296.423 1001.04 298.298 1000.42 301.281L1004.61 301.622C1004.92 300.536 1005.89 299.737 1007.52 299.737C1009.07 299.737 1009.95 300.514 1009.95 301.857L1009.95 301.92C1009.95 302.975 1008.83 303.114 1005.99 303.391C1002.75 303.689 999.84 304.776 999.84 308.43C999.84 311.668 1002.15 313.309 1005.27 313.309ZM1006.57 310.177C1005.18 310.177 1004.18 309.527 1004.18 308.281C1004.18 307.002 1005.23 306.374 1006.83 306.15C1007.82 306.011 1009.44 305.777 1009.98 305.415L1009.98 307.151C1009.98 308.867 1008.57 310.177 1006.57 310.177ZM1018.01 313L1022.55 313L1022.55 303.178C1022.55 301.367 1023.7 300.163 1025.21 300.163C1026.7 300.163 1027.7 301.185 1027.7 302.794L1027.7 313L1032.1 313L1032.1 303.007C1032.1 301.313 1033.07 300.163 1034.72 300.163C1036.17 300.163 1037.26 301.068 1037.26 302.89L1037.26 313L1041.79 313L1041.79 301.995C1041.79 298.447 1039.68 296.423 1036.63 296.423C1034.23 296.423 1032.37 297.648 1031.7 299.523L1031.53 299.523C1031.01 297.627 1029.33 296.423 1027.09 296.423C1024.88 296.423 1023.21 297.595 1022.53 299.523L1022.33 299.523L1022.33 296.636L1018.01 296.636L1018.01 313ZM1045.37 319.136L1049.91 319.136L1049.91 310.379L1050.05 310.379C1050.68 311.743 1052.05 313.266 1054.69 313.266C1058.42 313.266 1061.33 310.315 1061.33 304.84C1061.33 299.215 1058.3 296.423 1054.7 296.423C1051.97 296.423 1050.66 298.053 1050.05 299.385L1049.85 299.385L1049.85 296.636L1045.37 296.636L1045.37 319.136ZM1049.82 304.818C1049.82 301.899 1051.05 300.035 1053.26 300.035C1055.5 300.035 1056.7 301.984 1056.7 304.818C1056.7 307.673 1055.48 309.655 1053.26 309.655C1051.07 309.655 1049.82 307.737 1049.82 304.818ZM1068.9 291.182L1064.36 291.182L1064.36 313L1068.9 313L1068.9 291.182ZM1079.99 313.32C1084.04 313.32 1086.76 311.349 1087.4 308.313L1083.21 308.036C1082.75 309.282 1081.58 309.932 1080.06 309.932C1077.79 309.932 1076.36 308.43 1076.36 305.99L1076.36 305.979L1087.5 305.979L1087.5 304.733C1087.5 299.172 1084.13 296.423 1079.81 296.423C1074.99 296.423 1071.87 299.843 1071.87 304.893C1071.87 310.081 1074.95 313.32 1079.99 313.32ZM1076.36 303.167C1076.45 301.303 1077.87 299.811 1079.88 299.811C1081.85 299.811 1083.22 301.217 1083.23 303.167L1076.36 303.167ZM1093.11 313.277C1094.48 313.277 1095.66 312.137 1095.67 310.72C1095.66 309.325 1094.48 308.185 1093.11 308.185C1091.71 308.185 1090.55 309.325 1090.56 310.72C1090.55 312.137 1091.71 313.277 1093.11 313.277ZM1106.79 313.32C1111.15 313.32 1113.88 310.763 1114.1 307.002L1109.82 307.002C1109.55 308.749 1108.4 309.729 1106.84 309.729C1104.72 309.729 1103.35 307.95 1103.35 304.818C1103.35 301.729 1104.73 299.96 1106.84 299.96C1108.5 299.96 1109.57 301.058 1109.82 302.688L1114.1 302.688C1113.91 298.906 1111.04 296.423 1106.77 296.423C1101.8 296.423 1098.74 299.864 1098.74 304.882C1098.74 309.857 1101.75 313.32 1106.79 313.32ZM1124.4 313.32C1129.36 313.32 1132.45 309.921 1132.45 304.882C1132.45 299.811 1129.36 296.423 1124.4 296.423C1119.43 296.423 1116.34 299.811 1116.34 304.882C1116.34 309.921 1119.43 313.32 1124.4 313.32ZM1124.42 309.804C1122.13 309.804 1120.96 307.705 1120.96 304.85C1120.96 301.995 1122.13 299.886 1124.42 299.886C1126.67 299.886 1127.84 301.995 1127.84 304.85C1127.84 307.705 1126.67 309.804 1124.42 309.804ZM1135.4 313L1139.94 313L1139.94 303.178C1139.94 301.367 1141.09 300.163 1142.6 300.163C1144.1 300.163 1145.1 301.185 1145.1 302.794L1145.1 313L1149.5 313L1149.5 303.007C1149.5 301.313 1150.47 300.163 1152.12 300.163C1153.57 300.163 1154.65 301.068 1154.65 302.89L1154.65 313L1159.18 313L1159.18 301.995C1159.18 298.447 1157.07 296.423 1154.02 296.423C1151.63 296.423 1149.76 297.648 1149.09 299.523L1148.92 299.523C1148.4 297.627 1146.73 296.423 1144.48 296.423C1142.27 296.423 1140.6 297.595 1139.92 299.523L1139.73 299.523L1139.73 296.636L1135.4 296.636L1135.4 313Z\",\"fill\":\"url(#home-id-paint9)\",\"key\":21}),React.createElement(\"rect\",{\"x\":\"1\",\"y\":\"145\",\"width\":\"274.145\",\"height\":\"102\",\"rx\":\"8\",\"fill\":\"#CC4A00\",\"key\":22}),React.createElement(\"path\",{\"d\":\"M26.8825 203.727L23.8473 203.727L20.0664 206.121L20.0664 208.985L23.5639 206.792L23.6534 206.792L23.6534 219L26.8825 219L26.8825 203.727ZM30.5123 219L41.4001 219L41.4001 216.36L34.9868 216.36L34.9868 216.256L37.2165 214.071C40.3561 211.207 41.1988 209.775 41.1988 208.038C41.1988 205.39 39.0361 203.518 35.7623 203.518C32.5557 203.518 30.3557 205.435 30.3632 208.433L33.4282 208.433C33.4207 206.971 34.3454 206.076 35.74 206.076C37.0823 206.076 38.0816 206.912 38.0816 208.254C38.0816 209.469 37.3358 210.305 35.9488 211.64L30.5123 216.673L30.5123 219ZM47.036 219.216C48.7289 219.216 49.8251 218.478 50.3844 217.412L50.4739 217.412L50.4739 219L53.4867 219L53.4867 211.274C53.4867 208.545 51.1749 207.396 48.6245 207.396C45.8801 207.396 44.0755 208.709 43.6355 210.797L46.5737 211.036C46.7899 210.275 47.4686 209.716 48.6096 209.716C49.6909 209.716 50.3098 210.26 50.3098 211.2L50.3098 211.244C50.3098 211.983 49.5268 212.08 47.5357 212.273C45.2686 212.482 43.2328 213.243 43.2328 215.801C43.2328 218.068 44.851 219.216 47.036 219.216ZM47.9458 217.024C46.9689 217.024 46.2679 216.569 46.2679 215.696C46.2679 214.801 47.0062 214.362 48.1248 214.205C48.8184 214.108 49.9519 213.944 50.3322 213.69L50.3322 214.906C50.3322 216.107 49.3404 217.024 47.9458 217.024ZM59.1282 203.727L55.9513 203.727L55.9513 219L59.1282 219L59.1282 203.727ZM67.6315 219.336C71.472 219.336 73.7913 216.412 73.7987 211.379C73.8062 206.382 71.4571 203.518 67.6315 203.518C63.7984 203.518 61.4717 206.375 61.4642 211.379C61.4493 216.397 63.7835 219.328 67.6315 219.336ZM67.6315 216.658C65.879 216.658 64.7455 214.898 64.7529 211.379C64.7604 207.911 65.8865 206.166 67.6315 206.166C69.3691 206.166 70.5026 207.911 70.5026 211.379C70.51 214.898 69.3765 216.658 67.6315 216.658ZM81.7464 219.209C85.1768 219.209 87.6303 217.322 87.6229 214.712C87.6303 212.81 86.4222 211.453 84.1776 211.17L84.1776 211.05C85.8853 210.745 87.0636 209.537 87.0561 207.821C87.0636 205.413 84.9531 203.518 81.7912 203.518C78.6591 203.518 76.3026 205.353 76.2578 207.993L79.3526 207.993C79.3899 206.83 80.4563 206.076 81.7763 206.076C83.0813 206.076 83.9538 206.867 83.9464 208.015C83.9538 209.216 82.9322 210.029 81.4631 210.029L80.0387 210.029L80.0387 212.4L81.4631 212.4C83.1932 212.4 84.2745 213.265 84.267 214.496C84.2745 215.711 83.2305 216.547 81.7539 216.547C80.3295 216.547 79.2631 215.801 79.2035 214.682L75.9521 214.682C76.0043 217.352 78.3906 219.209 81.7464 219.209ZM95.4475 219C100.101 219 102.92 216.121 102.92 211.349C102.92 206.591 100.101 203.727 95.4923 203.727L90.0335 203.727L90.0335 219L95.4475 219ZM93.2625 216.233L93.2625 206.494L95.3208 206.494C98.1844 206.494 99.6982 207.956 99.6982 211.349C99.6982 214.757 98.1844 216.233 95.3133 216.233L93.2625 216.233ZM110.428 219.224C113.478 219.224 115.394 217.434 115.543 214.802L112.545 214.802C112.359 216.025 111.554 216.711 110.465 216.711C108.981 216.711 108.019 215.465 108.019 213.273C108.019 211.11 108.988 209.872 110.465 209.872C111.628 209.872 112.374 210.64 112.545 211.781L115.543 211.781C115.409 209.134 113.403 207.396 110.413 207.396C106.937 207.396 104.79 209.805 104.79 213.317C104.79 216.8 106.9 219.224 110.428 219.224ZM117.577 219L120.754 219L120.754 207.545L117.577 207.545L117.577 219ZM119.173 206.069C120.12 206.069 120.896 205.346 120.896 204.458C120.896 203.578 120.12 202.855 119.173 202.855C118.234 202.855 117.458 203.578 117.458 204.458C117.458 205.346 118.234 206.069 119.173 206.069ZM128.519 219.224C131.353 219.224 133.262 217.844 133.71 215.719L130.771 215.525C130.451 216.397 129.63 216.852 128.571 216.852C126.983 216.852 125.976 215.801 125.976 214.093L125.976 214.086L133.777 214.086L133.777 213.213C133.777 209.32 131.42 207.396 128.392 207.396C125.022 207.396 122.837 209.79 122.837 213.325C122.837 216.957 124.992 219.224 128.519 219.224ZM125.976 212.117C126.043 210.812 127.035 209.768 128.445 209.768C129.824 209.768 130.779 210.752 130.786 212.117L125.976 212.117ZM139.027 203.727L135.85 203.727L135.85 219L139.027 219L139.027 203.727ZM147.068 203.474C143.652 203.459 141.348 205.696 141.363 208.798C141.348 211.662 143.346 213.728 146.053 213.728C147.731 213.728 149.223 212.915 149.901 211.572L150.006 211.572C149.998 214.6 148.947 216.442 146.956 216.442C145.785 216.442 144.942 215.801 144.696 214.69L141.512 214.69C141.81 217.262 143.898 219.209 146.956 219.209C150.737 219.209 153.16 216.151 153.168 210.968C153.16 205.383 150.207 203.481 147.068 203.474ZM147.09 206.009C148.574 206.009 149.67 207.217 149.685 208.694C149.67 210.178 148.537 211.386 147.06 211.386C145.569 211.386 144.48 210.223 144.495 208.709C144.48 207.18 145.591 206.009 147.09 206.009ZM161.393 219.336C165.234 219.336 167.553 216.412 167.56 211.379C167.568 206.382 165.219 203.518 161.393 203.518C157.56 203.518 155.233 206.375 155.226 211.379C155.211 216.397 157.545 219.328 161.393 219.336ZM161.393 216.658C159.641 216.658 158.507 214.898 158.515 211.379C158.522 207.911 159.648 206.166 161.393 206.166C163.131 206.166 164.264 207.911 164.264 211.379C164.272 214.898 163.138 216.658 161.393 216.658ZM175.068 219.224C178.118 219.224 180.035 217.434 180.184 214.802L177.186 214.802C177 216.025 176.194 216.711 175.105 216.711C173.621 216.711 172.659 215.465 172.659 213.273C172.659 211.11 173.629 209.872 175.105 209.872C176.269 209.872 177.015 210.64 177.186 211.781L180.184 211.781C180.05 209.134 178.044 207.396 175.053 207.396C171.578 207.396 169.43 209.805 169.43 213.317C169.43 216.8 171.541 219.224 175.068 219.224ZM185.484 219.216C187.177 219.216 188.273 218.478 188.833 217.412L188.922 217.412L188.922 219L191.935 219L191.935 211.274C191.935 208.545 189.623 207.396 187.073 207.396C184.328 207.396 182.524 208.709 182.084 210.797L185.022 211.036C185.238 210.275 185.917 209.716 187.058 209.716C188.139 209.716 188.758 210.26 188.758 211.2L188.758 211.244C188.758 211.983 187.975 212.08 185.984 212.273C183.717 212.482 181.681 213.243 181.681 215.801C181.681 218.068 183.299 219.216 185.484 219.216ZM186.394 217.024C185.417 217.024 184.716 216.569 184.716 215.696C184.716 214.802 185.454 214.362 186.573 214.205C187.267 214.108 188.4 213.944 188.78 213.69L188.78 214.906C188.78 216.107 187.789 217.024 186.394 217.024ZM194.459 219L197.688 219L197.688 212.691L203.9 212.691L203.9 210.029L197.688 210.029L197.688 206.39L204.571 206.39L204.571 203.727L194.459 203.727L194.459 219Z\",\"fill\":\"white\",\"key\":23}),React.createElement(\"path\",{\"d\":\"M36.6866 178.761C35.4874 183.571 30.6156 186.498 25.8051 185.299C20.9965 184.099 18.0692 179.227 19.2689 174.418C20.4676 169.607 25.3393 166.68 30.1485 167.879C34.9588 169.078 37.8858 173.951 36.6866 178.761Z\",\"fill\":\"#F7931A\",\"key\":24}),React.createElement(\"path\",{\"d\":\"M31.9362 175.31C32.1149 174.115 31.2053 173.473 29.9614 173.044L30.3649 171.426L29.3798 171.18L28.987 172.756C28.728 172.692 28.462 172.631 28.1977 172.57L28.5933 170.984L27.6088 170.739L27.205 172.357C26.9906 172.308 26.7802 172.26 26.5759 172.209L26.5771 172.204L25.2185 171.864L24.9564 172.917C24.9564 172.917 25.6873 173.084 25.6719 173.095C26.0709 173.194 26.143 173.458 26.1309 173.667L25.6713 175.511C25.6988 175.518 25.7345 175.528 25.7738 175.544C25.7409 175.536 25.7059 175.527 25.6697 175.518L25.0254 178.101C24.9766 178.222 24.8529 178.404 24.574 178.335C24.5838 178.349 23.858 178.156 23.858 178.156L23.3689 179.284L24.6509 179.603C24.8894 179.663 25.1231 179.726 25.3532 179.785L24.9455 181.422L25.9295 181.667L26.3332 180.048C26.602 180.121 26.863 180.188 27.1183 180.251L26.716 181.863L27.7011 182.109L28.1088 180.475C29.7886 180.793 31.0518 180.665 31.5835 179.145C32.0119 177.922 31.5622 177.216 30.6783 176.756C31.322 176.608 31.8068 176.184 31.9362 175.31ZM29.6853 178.466C29.3809 179.689 27.3212 179.028 26.6534 178.862L27.1943 176.694C27.8621 176.86 30.0035 177.19 29.6853 178.466ZM29.9901 175.292C29.7123 176.405 27.9979 175.839 27.4418 175.701L27.9323 173.734C28.4884 173.873 30.2793 174.131 29.9901 175.292Z\",\"fill\":\"white\",\"key\":25}),React.createElement(\"path\",{\"d\":\"M45.3117 173.043C46.0399 173.043 46.6689 173.173 47.1975 173.429C47.7287 173.688 48.1669 174.036 48.5185 174.475C48.8653 174.915 49.1234 175.43 49.2901 176.02C49.4556 176.612 49.5387 177.248 49.5387 177.929C49.5387 178.975 49.3471 179.963 48.9601 180.895C48.5732 181.828 48.0483 182.637 47.3805 183.327C46.7132 184.016 45.9254 184.56 45.0169 184.961C44.1097 185.363 43.1235 185.564 42.0646 185.564C41.9277 185.564 41.6869 185.56 41.3468 185.553C41.0068 185.546 40.6159 185.511 40.1782 185.452C39.7377 185.39 39.272 185.3 38.7801 185.178C38.2885 185.058 37.8216 184.891 37.382 184.678L41.3135 168.159L44.8348 167.613L43.4271 173.475C43.7284 173.339 44.032 173.234 44.335 173.157C44.6383 173.082 44.9638 173.043 45.3117 173.043ZM42.3581 182.771C42.8884 182.771 43.3881 182.64 43.8575 182.384C44.3283 182.128 44.7346 181.781 45.0749 181.35C45.4153 180.917 45.6846 180.429 45.881 179.884C46.0775 179.339 46.1768 178.77 46.1768 178.178C46.1768 177.451 46.0553 176.884 45.8131 176.474C45.571 176.066 45.1229 175.86 44.4722 175.86C44.259 175.86 43.9843 175.901 43.6437 175.974C43.3019 176.051 42.9961 176.211 42.722 176.452L41.2231 182.678C41.3135 182.694 41.3934 182.709 41.4616 182.723C41.5284 182.739 41.6022 182.75 41.6757 182.757C41.7534 182.766 41.8424 182.77 41.9498 182.77C42.0573 182.77 42.1917 182.771 42.3581 182.771Z\",\"fill\":\"white\",\"key\":26}),React.createElement(\"path\",{\"d\":\"M53.1904 185.248H49.827L52.6674 173.296H56.0537L53.1904 185.248ZM54.827 171.84C54.3576 171.84 53.9319 171.7 53.5543 171.42C53.1735 171.142 52.985 170.713 52.985 170.136C52.985 169.818 53.0495 169.52 53.1775 169.239C53.3074 168.959 53.4771 168.717 53.6898 168.512C53.9022 168.308 54.1483 168.145 54.4277 168.023C54.7089 167.902 55.008 167.842 55.3267 167.842C55.7958 167.842 56.2192 167.981 56.5983 168.261C56.976 168.543 57.1659 168.971 57.1659 169.546C57.1659 169.864 57.1017 170.163 56.9726 170.444C56.8444 170.725 56.6746 170.966 56.4619 171.171C56.2512 171.375 56.0029 171.538 55.724 171.659C55.4426 171.782 55.1446 171.84 54.827 171.84Z\",\"fill\":\"white\",\"key\":27}),React.createElement(\"path\",{\"d\":\"M59.0011 170.318L62.5238 169.772L61.6587 173.295H65.4314L64.7502 176.067H61.0002L60.0013 180.247C59.9093 180.596 59.8571 180.921 59.8425 181.224C59.826 181.528 59.8644 181.789 59.9553 182.008C60.0457 182.229 60.2081 182.398 60.4438 182.518C60.6784 182.641 61.0142 182.702 61.4547 182.702C61.8175 182.702 62.1711 182.667 62.5128 182.599C62.8526 182.532 63.1969 182.438 63.5453 182.315L63.7962 184.907C63.3416 185.073 62.8495 185.217 62.3192 185.337C61.7881 185.46 61.1593 185.519 60.4326 185.519C59.3877 185.519 58.5777 185.364 58.0005 185.055C57.4242 184.743 57.0168 184.318 56.773 183.78C56.5325 183.244 56.425 182.626 56.4551 181.93C56.4862 181.231 56.5914 180.498 56.773 179.725L59.0011 170.318Z\",\"fill\":\"white\",\"key\":28}),React.createElement(\"path\",{\"d\":\"M65.2836 180.475C65.2836 179.446 65.4503 178.475 65.7833 177.566C66.1158 176.657 66.5948 175.861 67.2163 175.179C67.8355 174.499 68.59 173.961 69.478 173.566C70.3619 173.173 71.3515 172.975 72.4421 172.975C73.1248 172.975 73.7345 173.04 74.2709 173.169C74.8097 173.299 75.297 173.468 75.7378 173.68L74.5779 176.317C74.2749 176.194 73.9603 176.086 73.6351 175.988C73.3097 175.888 72.9124 175.839 72.4424 175.839C71.3198 175.839 70.4323 176.226 69.7718 176.998C69.1138 177.769 68.7825 178.808 68.7825 180.112C68.7825 180.884 68.9491 181.509 69.2836 181.987C69.6164 182.464 70.2311 182.702 71.1237 182.702C71.5642 182.702 71.9892 182.656 72.3964 182.566C72.8066 182.475 73.1688 182.361 73.4878 182.226L73.739 184.929C73.3136 185.094 72.8445 185.243 72.3299 185.374C71.8142 185.5 71.2002 185.565 70.4884 185.565C69.5487 185.565 68.7533 185.428 68.1026 185.157C67.4517 184.882 66.9138 184.517 66.4901 184.054C66.0642 183.591 65.7584 183.05 65.5693 182.428C65.3802 181.808 65.2836 181.156 65.2836 180.475Z\",\"fill\":\"white\",\"key\":29}),React.createElement(\"path\",{\"d\":\"M80.2242 185.565C79.4215 185.565 78.7242 185.443 78.1328 185.201C77.543 184.958 77.0545 184.619 76.6681 184.178C76.2812 183.74 75.9917 183.221 75.7933 182.622C75.5949 182.024 75.4995 181.361 75.4995 180.636C75.4995 179.725 75.6457 178.815 75.9411 177.907C76.2352 176.998 76.6715 176.18 77.2489 175.454C77.8219 174.726 78.5287 174.131 79.3609 173.668C80.1922 173.207 81.1485 172.975 82.2225 172.975C83.0107 172.975 83.7043 173.098 84.3039 173.34C84.9007 173.581 85.3923 173.924 85.7809 174.362C86.1653 174.803 86.4573 175.32 86.6537 175.919C86.8515 176.516 86.9492 177.18 86.9492 177.907C86.9492 178.815 86.805 179.725 86.5188 180.635C86.2323 181.541 85.8072 182.361 85.2461 183.089C84.686 183.815 83.9857 184.41 83.1445 184.871C82.3045 185.333 81.3303 185.565 80.2242 185.565ZM81.9052 175.84C81.4066 175.84 80.9658 175.984 80.5884 176.27C80.2096 176.56 79.8914 176.923 79.635 177.362C79.3757 177.802 79.1835 178.283 79.0536 178.805C78.9248 179.328 78.8617 179.823 78.8617 180.293C78.8617 181.051 78.9841 181.642 79.2245 182.067C79.4683 182.49 79.9063 182.702 80.543 182.702C81.0432 182.702 81.4818 182.559 81.8614 182.27C82.238 181.983 82.5564 181.619 82.8148 181.179C83.0724 180.741 83.2663 180.259 83.3962 179.736C83.5233 179.215 83.5881 178.717 83.5881 178.248C83.5881 177.492 83.4663 176.9 83.2236 176.475C82.9812 176.052 82.5413 175.84 81.9052 175.84Z\",\"fill\":\"white\",\"key\":30}),React.createElement(\"path\",{\"d\":\"M90.6141 185.248H87.248L90.0883 173.296H93.4763L90.6141 185.248ZM92.2482 171.84C91.7791 171.84 91.3537 171.7 90.9766 171.42C90.5978 171.142 90.4076 170.713 90.4076 170.136C90.4076 169.818 90.473 169.52 90.6012 169.239C90.7294 168.959 90.9003 168.717 91.113 168.512C91.3243 168.308 91.5726 168.145 91.8515 168.023C92.1309 167.902 92.43 167.842 92.7476 167.842C93.2179 167.842 93.6427 167.981 94.0209 168.261C94.3994 168.543 94.5905 168.971 94.5905 169.546C94.5905 169.864 94.5226 170.163 94.3955 170.444C94.2684 170.725 94.0975 170.966 93.8857 171.171C93.6725 171.375 93.4272 171.538 93.1478 171.659C92.8661 171.782 92.5675 171.84 92.2482 171.84Z\",\"fill\":\"white\",\"key\":31}),React.createElement(\"path\",{\"d\":\"M95.9004 173.84C96.1557 173.765 96.4408 173.675 96.7508 173.577C97.062 173.48 97.4096 173.389 97.798 173.307C98.1821 173.223 98.6156 173.154 99.0923 173.101C99.569 173.047 100.112 173.021 100.716 173.021C102.49 173.021 103.712 173.537 104.387 174.567C105.062 175.597 105.179 177.007 104.741 178.793L103.194 185.247H99.8083L101.308 178.929C101.399 178.535 101.471 178.153 101.524 177.781C101.578 177.412 101.575 177.086 101.512 176.804C101.452 176.526 101.311 176.298 101.093 176.122C100.871 175.948 100.536 175.861 100.081 175.861C99.6422 175.861 99.1961 175.908 98.7407 175.999L96.5362 185.247H93.1493L95.9004 173.84Z\",\"fill\":\"white\",\"key\":32}),React.createElement(\"rect\",{\"x\":\"1\",\"y\":\"457\",\"width\":\"242.434\",\"height\":\"102\",\"rx\":\"8\",\"fill\":\"#006CCC\",\"key\":33}),React.createElement(\"path\",{\"d\":\"M30.2681 537.4C32.3935 537.4 34.4741 536.9 35.4062 536.371L34.668 534.208C33.87 534.536 32.1548 534.969 30.4396 534.969C25.5774 534.969 22.9375 532.388 22.9226 527.675C22.9375 523.41 25.3686 520.196 30.3278 520.196C33.9148 520.196 37.2482 521.911 37.2408 526.594C37.2482 529.51 36.7113 530.837 35.6822 530.837C35.1676 530.837 34.8544 530.45 34.8469 529.756L34.8469 522.478L32.5128 522.478L32.5128 523.313L32.4084 523.313C32.1548 522.657 30.5739 522.038 28.896 522.291C26.9048 522.582 24.7571 524.215 24.7422 527.675C24.7571 531.188 26.7557 532.985 29.1122 533.112C30.805 533.209 32.3263 532.5 32.6768 531.598L32.7663 531.598C32.9304 532.627 33.6165 533.328 35.3466 533.201C38.5682 533.022 39.7986 530.427 39.7912 526.766C39.7986 521.463 36.2937 517.794 30.3651 517.794C23.9517 517.794 20.2752 521.769 20.2678 527.765C20.2752 533.858 23.9219 537.4 30.2681 537.4ZM29.9251 530.658C27.9787 530.658 27.3224 529.167 27.315 527.586C27.3224 525.886 28.2546 524.775 29.9102 524.775C31.7969 524.775 32.3636 525.774 32.3711 527.564C32.3935 529.592 31.7521 530.658 29.9251 530.658ZM44.5956 533L45.7291 529.517L51.2401 529.517L52.3737 533L55.8339 533L50.569 517.727L46.4078 517.727L41.1354 533L44.5956 533ZM46.5494 526.997L48.4287 521.217L48.548 521.217L50.4273 526.997L46.5494 526.997ZM60.7893 517.727L57.6125 517.727L57.6125 533L60.7893 533L60.7893 517.727ZM63.3342 533L66.511 533L66.511 521.545L63.3342 521.545L63.3342 533ZM64.93 520.069C65.8771 520.069 66.6527 519.346 66.6527 518.458C66.6527 517.578 65.8771 516.855 64.93 516.855C63.9904 516.855 63.2148 517.578 63.2148 518.458C63.2148 519.346 63.9904 520.069 64.93 520.069ZM74.2313 533.224C77.2813 533.224 79.1979 531.434 79.347 528.802L76.3492 528.802C76.1627 530.025 75.3573 530.711 74.2686 530.711C72.7845 530.711 71.8225 529.465 71.8225 527.273C71.8225 525.11 72.792 523.872 74.2686 523.872C75.4319 523.872 76.1776 524.64 76.3492 525.781L79.347 525.781C79.2128 523.134 77.2068 521.396 74.2164 521.396C70.7412 521.396 68.5935 523.805 68.5935 527.317C68.5935 530.8 70.7039 533.224 74.2313 533.224ZM86.6012 533.224C89.435 533.224 91.3441 531.844 91.7915 529.719L88.8533 529.525C88.5327 530.397 87.7124 530.852 86.6534 530.852C85.065 530.852 84.0582 529.801 84.0582 528.093L84.0582 528.086L91.8587 528.086L91.8587 527.213C91.8587 523.32 89.5021 521.396 86.4744 521.396C83.1037 521.396 80.9187 523.79 80.9187 527.325C80.9187 530.957 83.0739 533.224 86.6012 533.224ZM84.0582 526.117C84.1254 524.812 85.1172 523.768 86.5266 523.768C87.9062 523.768 88.8608 524.752 88.8683 526.117L84.0582 526.117ZM93.9915 533L97.2205 533L97.2205 528.66L98.8089 526.721L102.993 533L106.855 533L101.121 524.566L106.788 517.727L102.918 517.727L97.4219 524.461L97.2205 524.461L97.2205 517.727L93.9915 517.727L93.9915 533ZM114.369 533.336C118.209 533.336 120.529 530.412 120.536 525.379C120.544 520.382 118.194 517.518 114.369 517.518C110.536 517.518 108.209 520.375 108.202 525.379C108.187 530.397 110.521 533.328 114.369 533.336ZM114.369 530.658C112.616 530.658 111.483 528.898 111.49 525.379C111.498 521.911 112.624 520.166 114.369 520.166C116.106 520.166 117.24 521.911 117.24 525.379C117.247 528.898 116.114 530.658 114.369 530.658ZM122.839 533L133.726 533L133.726 530.36L127.313 530.36L127.313 530.256L129.543 528.071C132.682 525.207 133.525 523.775 133.525 522.038C133.525 519.39 131.362 517.518 128.089 517.518C124.882 517.518 122.682 519.435 122.689 522.433L125.754 522.433C125.747 520.971 126.672 520.076 128.066 520.076C129.408 520.076 130.408 520.912 130.408 522.254C130.408 523.469 129.662 524.305 128.275 525.64L122.839 530.673L122.839 533ZM141.711 533.209C145.142 533.209 147.595 531.322 147.588 528.712C147.595 526.81 146.387 525.453 144.142 525.17L144.142 525.05C145.85 524.745 147.028 523.537 147.021 521.821C147.028 519.413 144.918 517.518 141.756 517.518C138.624 517.518 136.267 519.353 136.223 521.993L139.317 521.993C139.355 520.83 140.421 520.076 141.741 520.076C143.046 520.076 143.919 520.867 143.911 522.015C143.919 523.216 142.897 524.029 141.428 524.029L140.004 524.029L140.004 526.4L141.428 526.4C143.158 526.4 144.239 527.265 144.232 528.496C144.239 529.711 143.195 530.547 141.719 530.547C140.294 530.547 139.228 529.801 139.168 528.682L135.917 528.682C135.969 531.352 138.355 533.209 141.711 533.209ZM149.678 530.315L157.008 530.315L157.008 533L160.096 533L160.096 530.315L161.99 530.315L161.99 527.728L160.096 527.728L160.096 517.727L156.054 517.727L149.678 527.772L149.678 530.315ZM157.068 527.728L152.929 527.728L152.929 527.608L156.949 521.247L157.068 521.247L157.068 527.728Z\",\"fill\":\"white\",\"key\":34}),React.createElement(\"rect\",{\"x\":\"22\",\"y\":\"479\",\"width\":\"27\",\"height\":\"24\",\"rx\":\"3\",\"fill\":\"#66B7FF\",\"key\":35}),React.createElement(\"defs\",{\"key\":36},[React.createElement(\"linearGradient\",{\"id\":\"home-id-paint0\",\"x1\":\"378.508\",\"y1\":\"335.805\",\"x2\":\"486.559\",\"y2\":\"368.627\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":0},[React.createElement(\"stop\",{\"stopColor\":\"#B0FF33\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.494792\",\"stopColor\":\"#55DF20\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#0AC222\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint1\",\"x1\":\"495.435\",\"y1\":\"294.201\",\"x2\":\"442.614\",\"y2\":\"493.296\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":1},[React.createElement(\"stop\",{\"stopColor\":\"#0044FF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.489583\",\"stopColor\":\"#0087FF\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#00CAFF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint2\",\"x1\":\"-328.177\",\"y1\":\"194.034\",\"x2\":\"-262.566\",\"y2\":\"446.553\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":2},[React.createElement(\"stop\",{\"stopColor\":\"#0AC222\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.494792\",\"stopColor\":\"#55DF20\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#B0FF33\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint3\",\"x1\":\"721.967\",\"y1\":\"304.466\",\"x2\":\"504.502\",\"y2\":\"498.576\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":3},[React.createElement(\"stop\",{\"stopColor\":\"#FF8100\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.0001\",\"stopColor\":\"#FF8100\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.5\",\"stopColor\":\"#FF5D00\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#FF3600\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint4\",\"x1\":\"865\",\"y1\":\"304.44\",\"x2\":\"690.959\",\"y2\":\"304.441\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":4},[React.createElement(\"stop\",{\"offset\":\"0.0242741\",\"stopColor\":\"#FF5D00\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.369792\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.6875\",\"stopColor\":\"#0990E8\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"0.988939\",\"stopColor\":\"#55DF20\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint5\",\"x1\":\"675.487\",\"y1\":\"295.467\",\"x2\":\"662.933\",\"y2\":\"380.634\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":5},[React.createElement(\"stop\",{\"stopColor\":\"#C906F9\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.494792\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#8700FF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint6\",\"x1\":\"244.849\",\"y1\":\"513.252\",\"x2\":\"699.318\",\"y2\":\"502.389\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":6},[React.createElement(\"stop\",{\"stopColor\":\"#0044FF\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.489583\",\"stopColor\":\"#0087FF\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#00CAFF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint7\",\"x1\":\"572.476\",\"y1\":\"350.484\",\"x2\":\"755.217\",\"y2\":\"307.098\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":7},[React.createElement(\"stop\",{\"stopColor\":\"#FF8100\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.0001\",\"stopColor\":\"#FF8100\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.5\",\"stopColor\":\"#FF5D00\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"1\",\"stopColor\":\"#FF3600\",\"key\":3})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint8\",\"x1\":\"844.807\",\"y1\":\"208.164\",\"x2\":\"627.665\",\"y2\":\"355.601\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":8},[React.createElement(\"stop\",{\"stopColor\":\"#C906F9\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.448312\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.862484\",\"stopColor\":\"#8700FF\",\"key\":2})]),React.createElement(\"linearGradient\",{\"id\":\"home-id-paint9\",\"x1\":\"858\",\"y1\":\"305.562\",\"x2\":\"1178.07\",\"y2\":\"305.562\",\"gradientUnits\":\"userSpaceOnUse\",\"key\":9},[React.createElement(\"stop\",{\"offset\":\"0.0242741\",\"stopColor\":\"#FF5D00\",\"key\":0}),React.createElement(\"stop\",{\"offset\":\"0.369792\",\"stopColor\":\"#A803FC\",\"key\":1}),React.createElement(\"stop\",{\"offset\":\"0.6875\",\"stopColor\":\"#0990E8\",\"key\":2}),React.createElement(\"stop\",{\"offset\":\"0.988939\",\"stopColor\":\"#55DF20\",\"key\":3})])])]);\n}\n\nIdentifier.defaultProps = {\"viewBox\":\"0 0 1178 559\",\"fill\":\"none\"};\n\nmodule.exports = Identifier;\n\nIdentifier.default = Identifier;\n","var React = require('react');\n\nfunction TechStack (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"ellipse\",{\"cx\":\"17.0568\",\"cy\":\"17.0204\",\"rx\":\"17.0568\",\"ry\":\"17.0204\",\"fill\":\"#55DF20\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M37.5 9L14 20.75L37.5 32.5L61 20.75L37.5 9Z\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"square\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M14 44.25L37.5 56L61 44.25\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"square\",\"key\":2}),React.createElement(\"path\",{\"d\":\"M14 32.5L37.5 44.25L61 32.5\",\"stroke\":\"white\",\"strokeWidth\":\"3\",\"strokeLinecap\":\"square\",\"key\":3})]);\n}\n\nTechStack.defaultProps = {\"width\":\"65\",\"height\":\"58\",\"viewBox\":\"0 0 65 58\",\"fill\":\"none\"};\n\nmodule.exports = TechStack;\n\nTechStack.default = TechStack;\n","export default [\n  {\n    logo: '/assets/home/integrate/payid-validator.svg',\n    name: 'PayID Validator',\n    description:\n      'a tool for performing checks to validate PayID response headers.',\n    userImage: '/assets/home/integrate/users/payid-validator.svg',\n    userName: 'Robert Swarthout',\n    userPost: 'Founder',\n    url: 'https://devpost.com/software/payid-validator',\n  },\n  {\n    logo: '/assets/home/integrate/zero_games.svg',\n    name: '0Games',\n    description: 'a peer-to-peer 0% fee video game crypto-marketplace.',\n    userImage: '/assets/home/integrate/users/zero_games.svg',\n    userName: 'Aymeric Bethencourt',\n    userPost: 'Founder',\n    url: 'https://devpost.com/software/0games',\n  },\n  {\n    logo: '/assets/home/integrate/unisend.svg',\n    name: 'Unisend',\n    description: 'app to send money internationally for free using PayID.',\n    userImage: '/assets/home/integrate/users/unisend.svg',\n    userName: 'Drew Patel',\n    userPost: 'Backend Developer',\n    url: 'https://devpost.com/software/temp-project-name-duso2p',\n  },\n  {\n    logo: '/assets/home/integrate/upay.svg',\n    name: 'Upay',\n    description:\n      'get paid for your online services by anyone anywhere in the world.',\n    userImage: '/assets/home/integrate/users/upay.svg',\n    userName: 'Konstantin Shkut',\n    userPost: 'Founder',\n    url: 'https://devpost.com/software/u-pay',\n  },\n]\n","import classNames from 'classnames'\nimport { withPrefix } from 'gatsby'\nimport React, { useState, useMemo } from 'react'\n\nimport Discord from '../../../assets/home/integrate/discord.svg'\nimport { getDocsLocation } from '../../../utils/config'\nimport Button from '../../common/button'\nimport Wave from '../../common/wave'\n\nimport developerDetails from './developerDetails'\n\ninterface DeveloperCardProps {\n  name: string\n  description: string\n  userName: string\n  userPost: string\n  logo: string\n  userImage: string\n  url: string\n}\n\nconst subPanels = [\n  {\n    name: 'Javascript',\n    link: 'https://github.com/xpring-eng/Xpring-SDK-Demo/tree/master/node',\n  },\n  {\n    name: 'Swift',\n    link: 'https://github.com/xpring-eng/Xpring-SDK-Demo/tree/master/swift',\n  },\n  {\n    name: 'Java',\n    link: 'https://github.com/xpring-eng/Xpring-SDK-Demo/tree/master/java',\n  },\n]\n\nconst discordBackground = {\n  backgroundImage: `url(${withPrefix('/assets/home/join-discord.svg')})`,\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n}\nconst discordBackgroundSmall = {\n  backgroundImage: `url(${withPrefix('/assets/home/join-discord-small.svg')})`,\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n}\n\nconst DeveloperCard = ({\n  name,\n  description,\n  userName,\n  userPost,\n  logo,\n  userImage,\n  url,\n}: DeveloperCardProps) => {\n  return (\n    <a href={url}>\n      <div className=\"w-full\">\n        <div className=\"w-full hover:shadow-devcard rounded-1rem\">\n          <div className=\"h-64 px-10 py-20 border bg-gradient-b-gray rounded-t-1rem border-gray-50\">\n            <img src={withPrefix(logo)} className=\"w-auto h-8 m-auto\" />\n          </div>\n          <div className=\"h-64 border border-gray-50 rounded-b-1rem\">\n            <div className=\"px-8 pt-8\">\n              <span className=\"text-lg font-semibold\">{name}</span>\n              <p className=\"mt-3 text-base\">{description}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex w-full\">\n          <img\n            src={withPrefix(userImage)}\n            className=\"mt-6 mr-5 rounded-full h-14\"\n          />\n          <div className=\"font-medium mt-7\">\n            <p>{userName},</p>\n            <p>{userPost}</p>\n          </div>\n        </div>\n      </div>\n    </a>\n  )\n}\n\nconst Integrate: React.FC = () => {\n  const panels = ['cURL', 'Javascript', 'RippleX SDK']\n  const [activePanel, setActivePanel] = useState<string>('cURL')\n  const [activeSubPanel, setActiveSubpanel] = useState<string>('Javascript')\n  const [activeCardIdx, setActiveCardIdx] = useState(0)\n\n  const subPanelLink = useMemo(() => {\n    if (activeSubPanel) {\n      const subIdx = subPanels.findIndex(\n        (panel) => panel.name === activeSubPanel,\n      )\n\n      if (subIdx >= 0) {\n        return subPanels[subIdx].link\n      }\n    }\n    return ''\n  }, [activeSubPanel])\n\n  return (\n    <Wave background=\"white\" wave=\"gray\" no-gutter>\n      {/* Header */}\n      <div className=\"flex justify-center\">\n        <div className=\"flex flex-col self-center max-w-xl text-left md:items-center md:text-center\">\n          <h2 className=\"mb-6 text-3xl font-bold md:mb-8 sm:text-5xl\">\n            Integrate Into Your App in Minutes\n          </h2>\n          <p className=\"mb-16 sm:text-xl sm:mb-24\">\n            Set up on your preferred platform with a few lines of code and\n            minimal maintenance.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"md:flex\">\n        <div className=\"w-full mb-16 overflow-hidden md:mb-0 md:mr-20\">\n          <h3 className=\"text-2xl font-bold\">Receive Money</h3>\n          <p className=\"mt-4\">\n            Set up a PayID server to provide your users PayIDs\n          </p>\n          <div className=\"mt-10 md:mt-16\">\n            <p className=\"font-medium\">Clone Repo</p>\n          </div>\n          <div className=\"mt-6 overflow-x-auto font-mono text-sm font-normal text-white rounded bg-blue-dark-800 md:mt-8\">\n            <div className=\"flex w-full p-4\">\n              <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                <p>1</p>\n                <p>2</p>\n              </div>\n              <div className=\"px-8 py-6 whitespace-no-wrap\">\n                <div>\n                  <span className=\"text-blue-dark-300\">git</span> clone\n                  git@github.com:payid-org/payid.git\n                </div>\n                <div>\n                  <span className=\"text-orange-300\">cd</span> payid\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-10 md:mt-16\">\n            <p className=\"font-medium\">Run Script</p>\n          </div>\n          <div className=\"mt-6 overflow-x-auto font-mono text-sm font-normal text-white rounded bg-blue-dark-800 md:mt-8\">\n            <div className=\"flex w-full p-4\">\n              <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                <p>1</p>\n              </div>\n              <div className=\"px-8 py-6 whitespace-no-wrap\">\n                <div>npm run devEnvUp</div>\n              </div>\n            </div>\n          </div>\n          <a href={getDocsLocation()}>\n            <Button label=\"Read More\" className=\"mt-10 md:mt-16\" />\n          </a>\n        </div>\n        <div className=\"w-full overflow-hidden \">\n          <h3 className=\"text-2xl font-bold\">Send Money</h3>\n          <p className=\"mt-4\">Enable your users to send to PayIDs</p>\n          <div className=\"mt-10 md:mt-16\">\n            {panels.map((panel, panelIndex) => {\n              return (\n                <button\n                  key={panelIndex}\n                  onClick={(): void => setActivePanel(panel)}\n                  disabled={panel === activePanel}\n                  className={classNames('mr-8 font-medium focus:outline-none', {\n                    'border-b-2 border-orange-500': activePanel === panel,\n                    'text-gray-500 hover:text-orange-500 focus:text-orange-500':\n                      activePanel !== panel,\n                  })}\n                >\n                  {panel}\n                </button>\n              )\n            })}\n          </div>\n          {activePanel === 'cURL' && (\n            <div className=\"mt-6 overflow-x-auto font-mono text-sm font-normal text-white rounded bg-blue-dark-800 md:mt-8\">\n              <div className=\"flex w-full p-4\">\n                <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                  <p>1</p>\n                  <p>2</p>\n                  <p>3</p>\n                </div>\n                <div className=\"px-8 py-6 whitespace-no-wrap\">\n                  <div>\n                    curl --location --request GET{' '}\n                    <span className=\"text-green-300\">\n                      &apos;https://ripplex.money/stormtv&apos;\n                    </span>{' '}\n                    \\\n                  </div>\n                  <div>\n                    --header{' '}\n                    <span className=\"text-green-300\">\n                      &apos;Accept: application/xrpl-testnet+json,\n                      application/btc-mainnet+json&apos;\n                    </span>{' '}\n                    \\\n                  </div>\n                  <div>\n                    --header{' '}\n                    <span className=\"text-green-300\">\n                      &apos;PayID-Version: 1.0&apos;\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          {activePanel === 'Javascript' && (\n            <div className=\"mt-6 overflow-x-auto font-mono text-sm font-normal text-white rounded bg-blue-dark-800 md:mt-8\">\n              <div className=\"flex w-full p-4\">\n                <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                  <p>1</p>\n                  <p>2</p>\n                  <p>3</p>\n                  <p>4</p>\n                  <p>5</p>\n                  <p>6</p>\n                  <p>7</p>\n                  <p>8</p>\n                  <p>9</p>\n                  <p>10</p>\n                  <p>11</p>\n                  <p>12</p>\n                </div>\n                <div className=\"px-8 py-6 whitespace-no-wrap\">\n                  <div>\n                    <span className=\"text-blue-dark-300\">const</span>{' '}\n                    <span className=\"text-blue-300\">axios</span> =\n                    <span className=\"text-green-200\"> require</span>(\n                    <span className=\"text-orange-300\">&apos;axios&apos;</span>)\n                  </div>\n                  <div>\n                    <span className=\"text-blue-dark-300\">const</span>{' '}\n                    <span className=\"text-blue-300\">response</span> ={' '}\n                    <span className=\"text-purple-200\">await</span>\n                    <span className=\"text-blue-light-300\"> axios</span>.\n                    <span className=\"text-green-200\">get</span>(\n                  </div>\n                  <div>\n                    &nbsp;&nbsp;\n                    <span className=\"text-orange-300\">\n                      &apos;https://xpring.money/stormtv&apos;\n                    </span>\n                    ,\n                  </div>\n                  <div>&nbsp;&nbsp;&#123;</div>\n                  <div>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <span className=\"text-blue-light-300\">headers:</span> &#123;\n                  </div>\n                  <div>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <span className=\"text-blue-light-300\">Accept:</span>\n                  </div>\n                  <div>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <span className=\"text-orange-300\">\n                      &apos;application/xrpl-mainnet+json,\n                      application/btc-mainnet+json&apos;\n                    </span>\n                    ,\n                  </div>\n                  <div>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <span className=\"text-orange-300\">\n                      &apos;PayID-Version&apos;\n                    </span>\n                    :<span className=\"text-orange-300\">&apos;1.0&apos;</span>,\n                  </div>\n                  <div>&nbsp;&nbsp;&nbsp;&nbsp;&#125;,</div>\n                  <div>&nbsp;&nbsp;&#125;,</div>\n                  <div>)</div>\n                  <div>\n                    <span className=\"text-blue-dark-300\">const</span>{' '}\n                    <span className=\"text-blue-300\">addresses</span> =\n                    <span className=\"text-blue-light-300\">\n                      {' '}\n                      response.data.addresses\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          {/* https://runkit.com/stormtv/payid-javascript */}\n          {activePanel === 'RippleX SDK' && (\n            <>\n              <div className=\"mt-6 mb-16 font-mono text-sm font-normal text-white rounded\">\n                <div className=\"pt-4 mb-6\">\n                  {subPanels.map((subPanel, subIdx) => (\n                    <button\n                      key={subIdx}\n                      onClick={(): void => setActiveSubpanel(subPanel.name)}\n                      className={classNames(\n                        'border rounded mr-2 text-xs focus:outline-none  px-4 py-1 border-orange-500 font-bold',\n                        {\n                          'bg-orange-500  text-white ':\n                            subPanel.name === activeSubPanel,\n                        },\n                        {\n                          'border-orange-500 text-orange-500':\n                            subPanel.name !== activeSubPanel,\n                        },\n                      )}\n                    >\n                      {subPanel.name}\n                    </button>\n                  ))}\n                </div>\n                {activeSubPanel === 'Javascript' && (\n                  <p className=\"mt-4 mb-6 text-base text-black\">\n                    <a\n                      href=\"https://github.com/xpring-eng/xpring-js\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX-JS\n                    </a>\n                    &nbsp;is the JavaScript library of the&nbsp;\n                    <a\n                      href=\"https://github.com/xpring-eng/xpring-sdk\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX Dev Kit\n                    </a>\n                    . Use the provided classes to work directly with PayID.\n                  </p>\n                )}\n                {activeSubPanel === 'Swift' && (\n                  <p className=\"mt-4 mb-6 text-base text-black\">\n                    <a\n                      href=\"https://github.com/xpring-eng/xpringkit\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX-Swift\n                    </a>\n                    &nbsp;is the Swift library of the&nbsp;\n                    <a\n                      href=\"https://github.com/xpring-eng/xpring-sdk\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX Dev Kit\n                    </a>\n                    . Use the provided classes to work directly with PayID.\n                  </p>\n                )}\n                {activeSubPanel === 'Java' && (\n                  <p className=\"mt-4 mb-6 text-base text-black\">\n                    <a\n                      href=\"https://github.com/xpring-eng/xpring4j\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX4j\n                    </a>\n                    &nbsp;is the Java library of the&nbsp;\n                    <a\n                      href=\"https://github.com/xpring-eng/xpring-sdk\"\n                      className=\"text-orange-500 focus:underline hover:underline\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      RippleX Dev Kit\n                    </a>\n                    . Use the provided classes to work directly with PayID.\n                  </p>\n                )}\n                <div className=\"flex w-full p-4 overflow-x-auto rounded bg-blue-dark-800\">\n                  {activeSubPanel === 'Javascript' && (\n                    <>\n                      <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                        <p>1</p>\n                        <p>2</p>\n                        <p>3</p>\n                        <p>4</p>\n                        <p>5</p>\n                        <p>6</p>\n                        <p>7</p>\n                        <p>8</p>\n                      </div>\n                      <div className=\"px-8 py-6 whitespace-no-wrap\">\n                        <div>\n                          <div>\n                            <span className=\"text-blue-dark-300\">const</span>\n                            {' { '}\n                            <span className=\"text-blue-300\">PayIdClient</span>\n                            {' } = '}\n                            <span className=\"text-green-200\"> require</span>(\n                            <span className=\"text-orange-300\">\n                              &apos;xpring-js&apos;\n                            </span>\n                            )\n                          </div>\n                        </div>\n                        <div>&nbsp;</div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">const</span>{' '}\n                          <span className=\"text-blue-300\">payId</span>\n                          {' = '}\n                          <span className=\"text-orange-300\">\n                            &apos;stormtv$ripplex.money&apos;\n                          </span>\n                        </div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">const</span>{' '}\n                          <span className=\"text-blue-300\">network</span>\n                          {' = '}\n                          <span className=\"text-orange-300\">\n                            &apos;btc-mainnet&apos;\n                          </span>\n                        </div>\n\n                        <div>\n                          <span className=\"text-blue-dark-300\">const</span>{' '}\n                          <span className=\"text-blue-300\">payIdClient</span>\n                          {' = '}\n                          <span className=\"text-green-200\">new </span>\n                          <span className=\"text-blue-light-300\">\n                            PayIdClient\n                          </span>\n                          ()\n                        </div>\n                        <div>&nbsp;</div>\n\n                        <div>\n                          <span className=\"text-blue-dark-300\">const</span>{' '}\n                          <span className=\"text-blue-300\">\n                            resolvedAddressDetails\n                          </span>\n                          {' = '}\n                          <span className=\"text-purple-200\">await </span>\n                          <span className=\"text-blue-300\">payIdClient</span>.\n                          <span className=\"text-green-200\">\n                            cryptoAddressForPayId\n                          </span>\n                          (<span className=\"text-blue-300\">payId</span>\n                          {', '}\n                          <span className=\"text-blue-300\">network</span>)\n                        </div>\n                        <div>\n                          <span className=\"text-blue-300\">console</span>.\n                          <span className=\"text-green-200\">log</span>(\n                          <span className=\"text-blue-300\">\n                            resolvedAddressDetails\n                          </span>\n                          .<span className=\"text-blue-300\">address</span>)\n                        </div>\n                      </div>\n                    </>\n                  )}\n                  {activeSubPanel === 'Swift' && (\n                    <>\n                      <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                        <p>1</p>\n                        <p>2</p>\n                        <p>3</p>\n                        <p>4</p>\n                        <p>5</p>\n                        <p>6</p>\n                        <p>7</p>\n                        <p>8</p>\n                        <p>9</p>\n                        <p>10</p>\n                        <p>11</p>\n                        <p>12</p>\n                        <p>13</p>\n                        <p>14</p>\n                      </div>\n                      <div className=\"px-8 py-6 whitespace-no-wrap\">\n                        <div>\n                          <span className=\"text-purple-200\">import</span>{' '}\n                          <span className=\"text-green-300\">XpringKit</span>\n                        </div>\n                        <div>&nbsp;</div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">network</span> ={' '}\n                          <span className=\"text-orange-300\">\n                            &quot;btc-mainnet&quot;\n                          </span>\n                        </div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">payID</span> ={' '}\n                          <span className=\"text-orange-300\">\n                            &quot;stormtv$xpring.money&quot;\n                          </span>\n                        </div>\n                        <div>\n                          {' '}\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">payIDClient</span> ={' '}\n                          <span className=\"text-green-300\">PayIDClient</span>()\n                        </div>\n                        <div>&nbsp;</div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">result</span> ={' '}\n                          <span className=\"text-blue-300\">payIDClient</span>\n                          <span>.</span>\n                          <span className=\"text-green-300\">cryptoAddress</span>\n                          <span>(</span>\n                          <span className=\"text-green-dark-300\">for:</span>{' '}\n                          <span className=\"text-blue-300\">payID</span>\n                          {', '}\n                          <span className=\"text-green-dark-300\">on:</span>{' '}\n                          <span className=\"text-blue-300\">network</span>)\n                        </div>\n                        <div>&nbsp;</div>\n                        <div>\n                          <span className=\"text-purple-200\">switch</span>{' '}\n                          <span className=\"text-blue-300\">result</span>{' '}\n                          <span>{`{`}</span>\n                        </div>\n                        <div>\n                          <span className=\"text-purple-200\">case</span>{' '}\n                          <span>.success</span>\n                          <span>(</span>\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">\n                            addressComponents\n                          </span>\n                          <span>):</span>\n                        </div>\n                        <div>\n                          &nbsp;&nbsp;\n                          <span className=\"text-green-300\">print</span>\n                          <span>(</span>\n                          <span className=\"text-blue-300\">\n                            btcAddressComponents.address\n                          </span>\n                          <span>)</span>\n                        </div>\n                        <div>\n                          <span className=\"text-purple-200\">case</span>{' '}\n                          <span>.failure</span>\n                          <span>(</span>\n                          <span className=\"text-blue-dark-300\">let</span>{' '}\n                          <span className=\"text-blue-300\">error</span>\n                          <span>):</span>\n                        </div>\n                        <div>\n                          &nbsp;&nbsp;\n                          <span className=\"text-green-300\">print</span>\n                          <span>(</span>\n                          <span className=\"text-blue-300\">error</span>\n                          <span>)</span>\n                        </div>\n                        <div>{`}`}</div>\n                      </div>\n                    </>\n                  )}\n                  {activeSubPanel === 'Java' && (\n                    <>\n                      <div className=\"px-4 py-6 text-center rounded bg-blue-dark-700\">\n                        <p>1</p>\n                        <p>2</p>\n                        <p>3</p>\n                        <p>4</p>\n                        <p>5</p>\n                        <p>6</p>\n                        <p>7</p>\n                        <p>8</p>\n                        <p>9</p>\n                      </div>\n                      <div className=\"px-8 py-6 whitespace-no-wrap\">\n                        <div>\n                          <span className=\"text-purple-200\">import</span>{' '}\n                          <span className=\"text-blue-light-300\">\n                            io.xpring.payid.\n                          </span>\n                          <span className=\"text-blue-300\">PayIdClient</span>\n                          <span className=\"text-purple-200\">;</span>\n                        </div>\n                        <div>\n                          <span className=\"text-purple-200\">import</span>{' '}\n                          <span className=\"text-blue-light-300\">\n                            io.xpring.payid.generated.model.\n                          </span>\n                          <span className=\"text-blue-300\">\n                            CryptoAddressDetails\n                          </span>\n                          <span className=\"text-purple-200\">;</span>\n                        </div>\n                        <div>&nbsp;</div>\n\n                        <div>\n                          <span className=\"text-blue-dark-300\">String</span>{' '}\n                          <span className=\"text-blue-300\">payId</span>\n                          {' = '}\n                          <span className=\"text-orange-300\">\n                            &quot;stormtv$xpring.money&quot;\n                          </span>\n                          <span className=\"text-purple-200\">;</span>{' '}\n                        </div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">String</span>{' '}\n                          <span className=\"text-blue-300\">network</span>\n                          {' = '}\n                          <span className=\"text-orange-300\">\n                            &quot;btc-mainnet&quot;\n                          </span>\n                          <span className=\"text-purple-200\">;</span>\n                        </div>\n                        <div>\n                          <span className=\"text-blue-dark-300\">\n                            PayIdClient\n                          </span>{' '}\n                          <span className=\"text-blue-300\">payIdClient</span>\n                          {' = '}\n                          <span className=\"text-purple-200\">new</span>{' '}\n                          <span className=\"text-green-300\">PayIdClient</span>()\n                          <span className=\"text-purple-200\">;</span>\n                        </div>\n\n                        <div>&nbsp;</div>\n\n                        <div>\n                          <span className=\"text-blue-dark-300\">\n                            CryptoAddressDetails\n                          </span>{' '}\n                          <span className=\"text-blue-300\">\n                            addressComponents\n                          </span>\n                          {' = '}\n                          <span className=\"text-blue-300\">payIdClient</span>.\n                          <span className=\"text-green-300\">\n                            cryptoAddressForPayId\n                          </span>\n                          (<span className=\"text-blue-300\">payId</span>\n                          {', '}\n                          <span className=\"text-blue-300\">network</span>)\n                          <span className=\"text-purple-200\">;</span>{' '}\n                        </div>\n                        <div>\n                          <span className=\"text-blue-300\">System</span>.\n                          <span className=\"text-blue-300\">out</span>.\n                          <span className=\"text-green-300\">println</span>(\n                          <span className=\"text-blue-300\">\n                            addressComponents\n                          </span>\n                          .<span className=\"text-green-300\">getAddress</span>())\n                          <span className=\"text-purple-200\">;</span>{' '}\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n              <div>\n                <a href={subPanelLink} target=\"_blank\" rel=\"noreferrer\">\n                  <Button label=\"Run\" />\n                </a>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"flex justify-center mt-20\">\n        <div className=\"flex flex-col self-center text-left md:items-center md:text-center\">\n          <h2 className=\"mb-6 text-3xl font-bold md:mb-8 sm:text-5xl\">\n            Discover What&apos;s Being Built\n          </h2>\n          <p className=\"mb-16 sm:text-xl sm:mb-24\">\n            Explore what our developers are building.\n          </p>\n        </div>\n      </div>\n      <div className=\"hidden md:flex\">\n        <div className=\"grid gap-8 mt-24 md:grid-cols-2 lg:grid-cols-4\">\n          {developerDetails.map((detail) => {\n            return <DeveloperCard key={detail.name} {...detail} />\n          })}\n        </div>\n      </div>\n      <div className=\"block md:hidden\">\n        <div className=\"flex\">\n          {developerDetails.map((detail, idx) => {\n            return (\n              <div\n                className=\"flex-1 mr-3 last:mr-0\"\n                key={`detail-${detail.name}`}\n              >\n                <div\n                  className={classNames('w-full mb-2', {\n                    'bg-gradient-r-orange-dark-to-light': activeCardIdx === idx,\n                  })}\n                  style={{ height: 1 }}\n                />\n                <button\n                  className=\"flex items-center w-full h-12 px-3 py-4 align-middle bg-white rounded shadow-lg sm:h-16 focus:outline-none\"\n                  onClick={() => {\n                    setActiveCardIdx(idx)\n                  }}\n                >\n                  <img src={withPrefix(detail.logo)} className=\"flex-1\" />\n                </button>\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"block mt-12\">\n          <DeveloperCard {...developerDetails[activeCardIdx]} />\n        </div>\n        <div className=\"mt-10 text-center\">\n          <Button label=\"See More Projects\" to={withPrefix('/use-cases')} />\n        </div>\n      </div>\n      <div className=\"hidden text-center md:block mt-18\">\n        <Button label=\"See More Projects\" to={withPrefix('/use-cases')} />\n      </div>\n      <div className=\"flex items-center justify-center w-full mt-24 text-center md:mt-32 lg:h-94\">\n        <div\n          style={discordBackground}\n          className=\"hidden w-full h-full overflow-hidden text-white rounded-xxl lg:block\"\n        >\n          <Discord className=\"m-auto mt-16\" />\n          <h1 className=\"mt-10 text-3xl font-bold\">Join Discord Community</h1>\n          <Button label=\"Join Discord\" className=\"mt-10\" />\n        </div>\n        <div\n          style={discordBackgroundSmall}\n          className=\"block w-full h-full overflow-hidden text-white rounded-xxl lg:hidden\"\n        >\n          <Discord className=\"m-auto mt-16\" />\n          <h1 className=\"mt-10 text-3xl font-bold\">Join Discord Community</h1>\n          <Button\n            label=\"Join Discord\"\n            className=\"mt-10 mb-10\"\n            to=\"https://chat.payid.org/\"\n          />\n        </div>\n      </div>\n    </Wave>\n  )\n}\n\nexport default Integrate\n","import { withPrefix } from 'gatsby'\nimport React from 'react'\n// import ReactPlayer from 'react-player'\n\nimport BetterUX from '../../../assets/home/introduction/better-ux.svg'\nimport MobileIdentifier from '../../../assets/home/introduction/identifier-mobile.svg'\nimport Identifier from '../../../assets/home/introduction/identifier.svg'\nimport OpenSource from '../../../assets/home/introduction/open-source.svg'\n// import Play from '../../../assets/home/introduction/play.svg'\nimport TechStack from '../../../assets/home/introduction/tech-stack.svg'\nimport { getDocsLocation } from '../../../utils/config'\nimport Button from '../../common/button'\nimport Wave from '../../common/wave'\n\nconst Introduction: React.FC = () => {\n  // const [playing, setPlaying] = useState(false)\n  const bgImgStyle = {\n    backgroundImage: `url(${withPrefix('/assets/home/background.svg')})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center top',\n  }\n\n  const sectionCopy = [\n    {\n      title: 'Open Source',\n      icon: OpenSource,\n      description:\n        'Join a community improving payments with open standards and protocols.',\n    },\n    {\n      title: 'Better UX',\n      icon: BetterUX,\n      description:\n        'Replace complex account numbers with a simple ID that works across any payment network and currency.',\n    },\n    {\n      title: 'Simple Tech Stack',\n      icon: TechStack,\n      description:\n        'Built on HTTP/DNS standards for easy deployment in any app, on any platform.',\n    },\n  ]\n\n  return (\n    <Wave\n      style={bgImgStyle}\n      wave=\"white\"\n      spacing=\"sm\"\n      waveClassNames=\"bg-contain lg:bg-auto xl:bg-contain\"\n    >\n      <div className=\"flex flex-col items-center\">\n        <h1 className=\"max-w-3xl pt-16 text-3xl font-bold text-center sm:text-h1 sm:leading-tighter lg:pt-70 sm:mb-10 mb-7\">\n          The Universal Payment Identifier\n        </h1>\n        <p className=\"mb-20 text-center md:mb-10 md:max-w-md sm:text-xl\">\n          A better way for your users to send and receive payments\n        </p>\n        <div className=\"hidden md:flex\">\n          <a href={getDocsLocation()} className=\"mr-8\">\n            <Button size=\"lg\" label=\"Start Building\" />\n          </a>\n          <Button\n            to=\"/our-vision-to-simplify-payments\"\n            size=\"lg\"\n            variant=\"secondary\"\n            label=\"Find Out More\"\n          />\n        </div>\n        <div className=\"md:hidden\">\n          <a href={getDocsLocation()} className=\"mr-6\">\n            <Button label=\"Start Building\" />\n          </a>\n          <Button to=\"contact\" variant=\"secondary\" label=\"Find Out More\" />\n        </div>\n        {/* <div className=\"relative w-full h-full p-px mt-20 border-2 rounded-lg border-blue-dark-500 pb-16-9\">\n          <ReactPlayer\n            playing={playing}\n            onReady={() => {\n              setPlaying(true)\n            }}\n            width=\"100%\"\n            height=\"100%\"\n            controls\n            className=\"absolute object-cover w-full h-full overflow-hidden rounded-lg\"\n            url=\"https://www.youtube.com/watch?v=gpLJp1lylns&t=2s\"\n            playIcon={<Play className=\"w-24\" />}\n            light={withPrefix('/assets/home/video-background.png')}\n          />\n        </div> */}\n        <Identifier className=\"hidden mt-36 lg:block\" />\n        <MobileIdentifier className=\"max-w-xs mt-24 lg:hidden\" />\n        <div className=\"grid grid-cols-1 gap-16 mt-24 lg:mt-36 lg:gap-28 lg:grid-cols-3\">\n          {sectionCopy.map((copy) => {\n            return (\n              <div key={copy.title} className=\"max-w-sm sm:max-w-lg\">\n                <copy.icon className=\"mb-10\" />\n                <h3 className=\"text-2xl font-bold sm:text-3xl mb-7\">\n                  {copy.title}\n                </h3>\n                <p className=\"sm:text-xl\">{copy.description}</p>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </Wave>\n  )\n}\n\nexport default Introduction\n","import React from 'react'\n\nimport Button from '../../common/button'\nimport Wave from '../../common/wave'\n\ninterface QuestionsProps {\n  direction?: 'ltr' | 'rtl'\n  title?: string\n  description?: string\n  orangeButton?: boolean\n  className?: string\n}\n\nconst Questions: React.FC<QuestionsProps> = (props) => {\n  const { direction = 'rtl', className } = props\n\n  return (\n    <Wave\n      background=\"orange\"\n      direction={direction}\n      wave=\"blue\"\n      spacing=\"lg\"\n      className=\"flex items-center justify-center\"\n      waveClassNames={className}\n    >\n      <div>\n        <div className=\"text-3xl font-bold text-center sm:text-5xl\">\n          Have Questions? Reach out to us anytime.\n        </div>\n        <div className=\"mt-16 mb-32 text-xl text-center\">\n          <Button\n            variant=\"secondary\"\n            to=\"/contact\"\n            label=\"Contact Us\"\n            className=\"w-full text-orange-500 bg-white\"\n          />\n        </div>\n      </div>\n    </Wave>\n  )\n}\n\nexport default Questions\n","import { withPrefix } from 'gatsby'\nimport React from 'react'\n\nimport Button from '../../common/button'\nimport Wave from '../../common/wave'\n\nconst Institutions: React.FC = () => {\n  return (\n    <Wave background=\"gray\" wave=\"white\" direction=\"rtl\" no-gutter>\n      <div className=\"flex flex-col text-left md:items-center md:text-center\">\n        <h2 className=\"mb-6 text-3xl font-bold md:mb-8 sm:text-5xl\">\n          Supported by Leading Institutions\n        </h2>\n        <p className=\"max-w-xl mb-3 sm:text-xl\">\n          Be a part of a community of financial and tech organizations dedicated\n          to improving the payment experience\n        </p>\n      </div>\n      <img\n        src={withPrefix('/assets/home/institutions/institutions.svg')}\n        className=\"hidden w-full md:block\"\n      />\n      <img\n        src={withPrefix('/assets/home/institutions/institutions-mobile.svg')}\n        className=\"w-7/12 mx-auto md:hidden\"\n      />\n      <div className=\"flex justify-center mt-16 sm:mt-32\">\n        <Button label=\"See More\" to={withPrefix('/about-us')} />\n      </div>\n    </Wave>\n  )\n}\n\nexport default Institutions\n","import React from 'react'\n\nimport Community from '../components/common/community'\nimport Learn from '../components/common/learn'\nimport Layout from '../components/layout'\nimport Integrate from '../components/pages/home/integrate'\nimport Introduction from '../components/pages/home/introduction'\nimport Questions from '../components/pages/home/questions'\nimport Support from '../components/pages/home/support'\n\nconst Index: React.FC = () => {\n  return (\n    <Layout\n      path=\"\"\n      title=\"Open Source, Universal Payment Identifier\"\n      description=\"PayID provides a single ID for anyone needing to send or receive money. Learn about PayID's open-source protocol & how to connect users on any payment network.\"\n    >\n      <Introduction />\n      <Integrate />\n      <Support />\n      <Learn background=\"white\" direction=\"rtl\" />\n      <Community\n        direction=\"rtl\"\n        enabledFields={['email']}\n        className=\"hidden md:block\"\n      />\n      <Questions direction=\"rtl\" className=\"md:hidden\" />\n    </Layout>\n  )\n}\n\nexport default Index\n","import { withPrefix } from 'gatsby'\nimport React from 'react'\n\nimport { getDocsLocation } from '../../utils/config'\n\nimport Wave from './wave'\n\ninterface LearnProps {\n  background?: 'white' | 'gray' | 'blue' | 'orange'\n  direction?: 'ltr' | 'rtl'\n}\n\nconst Learn: React.FC<LearnProps> = (props) => {\n  const learnables = [\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/developers.svg')})`,\n      },\n      title: 'Getting Started for Developers',\n      link: getDocsLocation(),\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/whitepaper.svg')})`,\n      },\n      title: 'PayID Technical White Paper',\n      link: '/whitepaper.pdf',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix(\n          '/assets/learn/api-reference.svg',\n        )})`,\n      },\n      title: 'API Reference',\n      link: 'https://api.payid.org/?version=latest',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/standards.svg')})`,\n      },\n      title: 'PayID Standards',\n      link: 'https://github.com/payid-org/rfcs',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/security.svg')})`,\n      },\n      title: 'Security and Privacy',\n      link:\n        'https://github.com/payid-org/rfcs/blob/master/dist/spec/verifiable-payid-protocol.txt',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/travel-rule.svg')})`,\n      },\n      title: 'Travel Rule and Compliance',\n      link: 'https://trisa.io/',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/checkout.svg')})`,\n      },\n      title: 'Checkout',\n      link: 'https://ripplex.io/portal/wallet/xrp/testnet',\n    },\n    {\n      bgStyle: {\n        backgroundImage: `url(${withPrefix('/assets/learn/xpring-sdk.svg')})`,\n      },\n      title: 'RippleX SDK for PayID',\n      link: `${getDocsLocation()}/ripplex-dev-kit-payid`,\n    },\n  ]\n\n  return (\n    <Wave\n      background={props.background}\n      direction={props.direction}\n      wave=\"orange\"\n      no-gutter\n    >\n      <div className=\"flex flex-col items-center sm:justify-center mb-14 md:mb-25\">\n        <h2 className=\"text-3xl font-bold sm:text-5xl sm:text-center \">\n          Learn More\n        </h2>\n        <p className=\"max-w-xl mt-6 text-xl sm:mt-8 sm:text-center\">\n          Discover everything you need to know about the free, open source PayID\n          protocol\n        </p>\n      </div>\n      <div className=\"flex justify-center\">\n        <div className=\"grid grid-cols-1 gap-8 sm:grid-cols-2 xl:grid-cols-4\">\n          {learnables.map((learnable) => {\n            return (\n              <a\n                href={learnable.link}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                key={learnable.title}\n                className=\"transition duration-500 ease-in-out transform bg-no-repeat bg-cover rounded-xl bg-blue-dark-900 focus:shadow-2xl hover:shadow-2xl focus:scale-105 hover:scale-105 focus:outline-none learnable\"\n                style={learnable.bgStyle}\n              >\n                <h3 className=\"font-bold text-white learnable-title mx-13\">\n                  {learnable.title}\n                </h3>\n              </a>\n            )\n          })}\n        </div>\n      </div>\n    </Wave>\n  )\n}\n\nexport default Learn\n","var React = require('react');\n\nfunction WaveRTL (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M255.397 106.85C347.319 82.8743 371.866 32.6632 375 0V230H0C0 98.0089 127.802 128.693 223.538 113.105C231.842 111.753 246.779 109.098 255.397 106.85Z\",\"fill\":\"currentColor\"}));\n}\n\nWaveRTL.defaultProps = {\"viewBox\":\"0 0 375 230\",\"fill\":\"none\"};\n\nmodule.exports = WaveRTL;\n\nWaveRTL.default = WaveRTL;\n","var React = require('react');\n\nfunction SelectArrow (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M1 1L4 4L7 1\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"}));\n}\n\nSelectArrow.defaultProps = {\"viewBox\":\"0 0 8 5\",\"fill\":\"none\"};\n\nmodule.exports = SelectArrow;\n\nSelectArrow.default = SelectArrow;\n","import classNames from 'classnames'\nimport React, {\n  InputHTMLAttributes,\n  useRef,\n  useState,\n  ChangeEvent,\n} from 'react'\n\ninterface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  invalidText?: string\n  requiredText?: string\n  theme?: 'orange' | 'blue'\n  validate?: (e: string | undefined) => boolean\n  id: string\n}\n\nconst InputField: React.FC<InputFieldProps> = (props: InputFieldProps) => {\n  const {\n    label,\n    invalidText,\n    requiredText,\n    validate,\n    theme = 'blue',\n    className,\n    onChange,\n    ...inputProps\n  } = props\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isRaised, setIsRaised] = useState<boolean>(false)\n  const [error, setError] = useState<string | boolean>()\n\n  const shouldRaise = (): void => {\n    if (!inputRef.current) {\n      setIsRaised(false)\n    } else if (inputRef.current.value.length > 0) {\n      setIsRaised(true)\n    } else if (\n      document.activeElement &&\n      document.activeElement.id === inputRef.current.id\n    ) {\n      setIsRaised(true)\n    } else {\n      setIsRaised(false)\n    }\n  }\n\n  const localOnChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    // Always propagate onChange\n    if (onChange) onChange(event)\n\n    // Check if we need to raise the label\n    shouldRaise()\n\n    // Check if we need to set and error for required fields\n    if (props.required && event.currentTarget.value.length === 0) {\n      if (props.requiredText) {\n        setError(props.requiredText)\n        return\n      }\n      setError(true)\n      return\n    }\n\n    // Check if this is a valid input\n    if (props.validate) {\n      if (!props.validate(event.currentTarget.value)) {\n        if (props.invalidText) {\n          setError(props.invalidText)\n          return\n        }\n        setError(true)\n        return\n      }\n    }\n\n    setError(false)\n  }\n\n  const hasErrors = !!(typeof error !== 'undefined' && error)\n\n  return (\n    <div className={classNames(className, 'relative w-full mb-6')}>\n      <input\n        onChange={localOnChange}\n        onFocus={shouldRaise}\n        onBlur={shouldRaise}\n        ref={inputRef}\n        {...inputProps}\n        className={classNames(\n          'w-full px-6 py-4 placeholder-white bg-transparent rounded border-2 appearance-none focus:outline-none',\n          {\n            'border-green-600': isRaised && !hasErrors && theme === 'blue',\n            'border-white': (!isRaised && !hasErrors) || theme === 'orange',\n            'border-orange-600': hasErrors && theme === 'blue',\n          },\n        )}\n      />\n      <label\n        htmlFor={props.id}\n        className={classNames(\n          'absolute z-10 transition-all duration-300 ease-linear pointer-events-none left-4 px-2 rounded',\n          {\n            'top-4': !isRaised && !hasErrors,\n            '-top-3': isRaised || hasErrors,\n            'text-green-600': isRaised && !hasErrors && theme === 'blue',\n            'text-orange-600': hasErrors && theme === 'blue',\n            'text-white': theme === 'orange' || (!isRaised && !hasErrors),\n            'bg-blue-dark-900': theme === 'blue',\n            'bg-orange-500': theme === 'orange',\n          },\n        )}\n      >\n        {props.label ?? props.name}{' '}\n      </label>\n      {typeof error === 'string' && (\n        <div\n          className={classNames('flex pt-1 text-sm', {\n            'text-orange-600': theme === 'blue',\n            'text-white': theme === 'orange',\n          })}\n        >\n          <div>{error}</div>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default InputField\n"],"sourceRoot":""}